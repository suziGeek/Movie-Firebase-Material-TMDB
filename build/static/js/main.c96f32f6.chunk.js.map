{"version":3,"sources":["firebase.js","services/authentication.js","services/appearance.js","constants/hookstore.js","components/Movie/Movie.js","components/Search/Search.js","components/Genres/Genres.js","components/MainMovie/MainMovie.js","components/EmptyState/EmptyState.js","components/ErrorBoundary/ErrorBoundary.js","components/LaunchScreen/LaunchScreen.js","components/UserAvatar/UserAvatar.js","components/Bar/Bar.js","constants/hooks.js","components/MovieDetail/MovieDetail.js","components/HomeContent/HomeContent.js","components/AdminContent/AdminContent.js","components/Loader/Loader.js","components/Favorites/Favorites.js","components/UserCard/UserCard.js","components/UserContent/UserContent.js","components/NotFoundContent/NotFoundContent.js","components/Router/Router.js","components/AboutDialog/AboutDialog.js","authProviders.js","components/AuthProviderList/AuthProviderList.js","constraints.js","components/SignUpDialog/SignUpDialog.js","components/SignInDialog/SignInDialog.js","components/AccountTab/AccountTab.js","components/AppearanceTab/AppearanceTab.js","components/LinksTab/LinksTab.js","components/SecurityTab/SecurityTab.js","components/SettingsDialog/SettingsDialog.js","components/DeleteAccountDialog/DeleteAccountDialog.js","components/AlertDialog/AlertDialog.js","components/DialogHost/DialogHost.js","components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","storage","authentication","fields","Promise","resolve","reject","firstName","lastName","username","emailAddress","password","currentUser","createUserWithEmailAndPassword","then","value","user","uid","collection","doc","set","logEvent","method","catch","reason","merge","signInWithEmailAndPassword","userDocumentReference","get","source","exists","sendSignInLinkToEmail","url","handleCodeInApp","localStorage","setItem","emailLink","signInWithEmailLink","removeItem","providerId","provider","OAuthProvider","signInWithPopup","linkWithPopup","unlink","providerData","find","authProvider","signOut","sendPasswordResetEmail","avatar","includes","type","size","avatarReference","ref","child","put","uploadTaskSnapshot","getDownloadURL","updateProfile","photoURL","delete","update","updateEmail","updatePassword","lastPasswordChange","FieldValue","serverTimestamp","sendEmailVerification","getIdTokenResult","idTokenResult","claims","roles","getRoles","displayName","charAt","email","emailVerified","profileCompletion","forEach","field","length","Math","floor","userData","metadata","creationTime","moment","securityRating","toDate","diff","colors","red","id","name","import","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","getColor","colorId","camelCase","defaultPrimaryColor","defaultSecondaryColor","defaultTheme","createMuiTheme","palette","primary","secondary","primaryColor","secondaryColor","dark","appearance","defaultDark","isDefaultTheme","theme","createTheme","changeTheme","changePrimaryColor","changeSecondaryColor","changeDark","changeSyncAppearance","syncAppearance","resetTheme","store","state","setState","this","setters","setter","useStore","useState","push","bind","useStyles","makeStyles","root","display","flexWrap","justifyContent","height","backgroundColor","background","paper","modal","alignItems","border","boxShadow","shadows","padding","spacing","contphot","margin","photo","width","transition","transform","opacity","titleBar","icon","color","userId","userFav","Movie","movie","classes","movieId","React","starFill","setStarFill","db","favorite","original_title","open","setOpen","onAuthStateChanged","favorites","console","log","poster","poster_path","Fragment","className","GridListTile","key","to","onClick","src","alt","title","arrayUnion","arrayRemove","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Search","props","searchValue","setSearchValue","isEnabled","required","onChange","e","target","placeholder","disabled","search","preventDefault","Genres","anchorEl","setAnchorEl","Boolean","data","setData","Genre","useEffect","fetch","response","json","handleClose","genre","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","style","maxHeight","ITEM_HEIGHT","map","MenuItem","selected","initialState","loading","movies","errorMessage","reducer","action","payload","error","MainMovie","useReducer","dispatch","jsonResponse","results","Grid","container","direction","justify","minHeight","index","EmptyState","fontSize","variant","description","Box","textAlign","clone","Typography","Component","defaultProps","ErrorBoundary","hasError","eventId","errorInfo","Sentry","scope","setExtras","children","Error","LaunchScreen","center","CircularProgress","withStyles","position","top","left","UserAvatar","context","defaultCursor","AccountCircle","photoUrl","Avatar","nameInitials","getNameInitials","ListItemAvatar","Person","cursor","Bar","openMenu","menu","closeMenu","performingAction","onAboutClick","onSettingsClick","onSignOutClick","onSignUpClick","onSignInClick","menuItems","divide","AppBar","Toolbar","flexGrow","mr","Button","component","Link","Object","assign","menuItem","hasOwnProperty","condition","Divider","ButtonGroup","useFetch","setLoading","a","fetchUrl","maxWidth","MovieDetail","favbut","setFavbut","movie_id","imagepath","item","xs","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","overview","CardActions","HomeContent","window","location","href","isSignInWithEmailLink","getItem","history","openSnackbar","code","message","finally","Home","withRouter","AdminContent","Loader","Favorites","favoritesRef","onDelete","UserCard","CardHeader","subheader","grid","UserContent","setUser","setError","useParams","onSnapshot","snapshot","PersonOutline","NotFoundContent","FindInPage","Router","bar","basename","REACT_APP_BASENAME","path","exact","AboutDialog","dialogProps","Dialog","fullWidth","DialogTitle","disableTypography","Tooltip","closeButton","Close","DialogContent","List","disablePadding","ListItem","ListItemText","right","authProviders","AuthProviderList","onAuthProviderClick","mb","orientation","AuthProviderButton","startIcon","constraints","presence","allowEmpty","minimum","maximum","emailAddressConfirmation","equality","attribute","passwordConfirmation","errors","SignUpDialog","signUp","validate","signUpWithEmailAddressAndPassword","signInWithAuthProvider","handleKeyPress","altKey","ctrlKey","metaKey","shiftKey","handleExited","handleEmailAddressChange","handleEmailAddressConfirmationChange","handlePasswordChange","handlePasswordConfirmationChange","disableBackdropClick","disableEscapeKeyDown","onKeyPress","onExited","Hidden","xsDown","divider","TextField","autoComplete","helperText","label","smUp","DialogActions","marginRight","marginBottom","SignInDialog","getSignInButton","signIn","resetPassword","showingField","avatarUrl","loadingAvatar","sentVerificationEmail","AccountTab","getNameInitialsOrIcon","personIcon","uploadAvatar","changeAvatar","getProfileCompletion","removeAvatar","URL","revokeObjectURL","showField","fieldId","hideFields","callback","changeFirstName","changeLastName","changeUsername","changeEmailAddress","verifyEmailAddress","changeField","handleKeyDown","handleAvatarChange","files","createObjectURL","handleFirstNameChange","handleLastNameChange","handleUsernameChange","onDeleteAccountClick","hasFirstName","hasLastName","hasUsername","dialogContent","Badge","badge","badgeContent","Fab","sizeSmall","small","loadingBadge","transitionDelay","unmountOnExit","thickness","CloudUpload","hidden","accept","htmlFor","Photo","ListItemIcon","Warning","autoFocus","onBlur","onKeyDown","ListItemSecondaryAction","Edit","Email","Check","AccessTime","lastSignInTime","format","mt","light","DeleteForever","getSecurityRating","paddingTop","marginLeft","AppearanceTab","handlePrimaryColorChange","handleSecondaryColorChange","handleDarkModeChange","checked","handleResetThemeClick","primaryColorLabelWidth","secondaryColorLabelWidth","primaryColorLabel","createRef","secondaryColorLabel","FiberManualRecord","FormControl","InputLabel","Select","native","labelWidth","keys","Brightness4","Checkbox","Switch","FormatColorReset","current","offsetWidth","LinksTab","linkAuthProvider","unlinkAuthProvider","authProviderData","identifier","phoneNumber","LinkOff","SecurityTab","changePassword","hasChangedPassword","Lock","tabs","Palette","Security","selectedTab","SettingsDialog","handleTabChange","handleIndexChange","Tabs","overflow","indicatorColor","textColor","tab","Tab","onChangeIndex","DeleteAccountDialog","deleteAccount","DialogContentText","AlertDialog","contentText","dismissiveAction","confirmingAction","acknowledgementAction","noTitlePadding","DialogHost","dialogs","aboutDialog","signUpDialog","signInDialog","settingsDialog","deleteAccountDialog","signOutDialog","smDown","fullScreen","mdUp","ready","snackbar","autoHideDuration","App","resetState","setTheme","openDialog","dialogId","dialog","undefined","closeDialog","closeAllDialogs","readingTime","time","closeSnackbar","clearMessage","CssBaseline","Snackbar","onAuthStateChangedObserver","userDocumentSnapshotListener","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","dsn","release","ReactDOM","render","document","getElementById","origin","addEventListener","contentType","headers","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c96f32f6.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\n\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/performance\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport default firebase;\nexport const analytics = firebase.analytics();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const performance = firebase.performance();\n","import firebase, { analytics, auth, firestore, storage } from \"../firebase\";\n\nimport moment from \"moment\";\n\nconst authentication = {};\n\nauthentication.signUp = fields => {\n  return new Promise((resolve, reject) => {\n    if (!fields) {\n      reject();\n\n      return;\n    }\n\n    const firstName = fields.firstName;\n    const lastName = fields.lastName;\n    const username = fields.username;\n    const emailAddress = fields.emailAddress;\n    const password = fields.password;\n\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .createUserWithEmailAndPassword(emailAddress, password)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .set({\n            firstName: firstName,\n            lastName: lastName,\n            username: username\n          })\n          .then(value => {\n            analytics.logEvent(\"sign_up\", {\n              method: \"password\"\n            });\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signUpWithEmailAddressAndPassword = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .createUserWithEmailAndPassword(emailAddress, password)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .set({}, { merge: true })\n          .then(value => {\n            analytics.logEvent(\"sign_up\", {\n              method: \"password\"\n            });\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signIn = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signInWithEmailAndPassword(emailAddress, password)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .get({ source: \"server\" })\n          .then(value => {\n            if (value.exists) {\n              analytics.logEvent(\"login\", {\n                method: \"password\"\n              });\n\n              resolve(user);\n            } else {\n              userDocumentReference\n                .set({}, { merge: true })\n                .then(value => {\n                  analytics.logEvent(\"login\", {\n                    method: \"password\"\n                  });\n\n                  resolve(user);\n                })\n                .catch(reason => {\n                  reject(reason);\n                });\n            }\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.sendSignInLinkToEmail = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    const actionCodeSettings = {\n      url: process.env.REACT_APP_HOMEPAGE,\n      handleCodeInApp: true\n    };\n\n    auth\n      .sendSignInLinkToEmail(emailAddress, actionCodeSettings)\n      .then(value => {\n        analytics.logEvent(\"send_sign_in_link_to_email\");\n\n        localStorage.setItem(\"emailAddress\", emailAddress);\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signInWithEmailLink = (emailAddress, emailLink) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !emailLink) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signInWithEmailLink(emailAddress, emailLink)\n      .then(value => {\n        analytics.logEvent(\"login\", {\n          method: \"email-link\"\n        });\n\n        localStorage.removeItem(\"emailAddress\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signInWithAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signInWithPopup(provider)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .get({ source: \"server\" })\n          .then(value => {\n            if (value.exists) {\n              analytics.logEvent(\"login\", {\n                method: providerId\n              });\n\n              resolve(user);\n            } else {\n              userDocumentReference\n                .set({}, { merge: true })\n                .then(value => {\n                  analytics.logEvent(\"login\", {\n                    method: providerId\n                  });\n\n                  resolve(user);\n                })\n                .catch(reason => {\n                  reject(reason);\n                });\n            }\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.linkAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .linkWithPopup(provider)\n      .then(value => {\n        analytics.logEvent(\"link_auth_provider\", {\n          providerId: providerId\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.unlinkAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .unlink(providerId)\n      .then(value => {\n        analytics.logEvent(\"unlink_auth_provider\", {\n          providerId: providerId\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.authProviderData = providerId => {\n  if (!providerId) {\n    return;\n  }\n\n  const currentUser = auth.currentUser;\n\n  if (!currentUser) {\n    return;\n  }\n\n  const providerData = currentUser.providerData;\n\n  if (!providerData) {\n    return;\n  }\n\n  return providerData.find(\n    authProvider => authProvider.providerId === providerId\n  );\n};\n\nauthentication.signOut = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signOut()\n      .then(value => {\n        analytics.logEvent(\"sign_out\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.resetPassword = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .sendPasswordResetEmail(emailAddress)\n      .then(value => {\n        analytics.logEvent(\"reset_password\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeAvatar = avatar => {\n  return new Promise((resolve, reject) => {\n    if (!avatar) {\n      reject();\n\n      return;\n    }\n\n    const avatarFileTypes = [\n      \"image/gif\",\n      \"image/jpeg\",\n      \"image/png\",\n      \"image/webp\",\n      \"image/svg+xml\"\n    ];\n\n    if (!avatarFileTypes.includes(avatar.type)) {\n      reject();\n\n      return;\n    }\n\n    if (avatar.size > 20 * 1024 * 1024) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const avatarReference = storage\n      .ref()\n      .child(\"images\")\n      .child(\"avatars\")\n      .child(uid);\n\n    avatarReference\n      .put(avatar)\n      .then(uploadTaskSnapshot => {\n        avatarReference\n          .getDownloadURL()\n          .then(value => {\n            currentUser\n              .updateProfile({\n                photoURL: value\n              })\n              .then(value => {\n                analytics.logEvent(\"change_avatar\");\n\n                resolve(value);\n              })\n              .catch(reason => {\n                reject(reason);\n              });\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.removeAvatar = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .updateProfile({\n        photoURL: null\n      })\n      .then(value => {\n        const avatarReference = storage\n          .ref()\n          .child(\"images\")\n          .child(\"avatars\")\n          .child(uid);\n\n        avatarReference\n          .delete()\n          .then(value => {\n            analytics.logEvent(\"remove_avatar\");\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeFirstName = firstName => {\n  return new Promise((resolve, reject) => {\n    if (!firstName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        firstName: firstName\n      })\n      .then(value => {\n        analytics.logEvent(\"change_first_name\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeLastName = lastName => {\n  return new Promise((resolve, reject) => {\n    if (!lastName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        lastName: lastName\n      })\n      .then(value => {\n        analytics.logEvent(\"change_last_name\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeUsername = username => {\n  return new Promise((resolve, reject) => {\n    if (!username) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        username: username\n      })\n      .then(value => {\n        analytics.logEvent(\"change_username\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeEmailAddress = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .updateEmail(emailAddress)\n      .then(value => {\n        analytics.logEvent(\"change_email_address\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changePassword = password => {\n  return new Promise((resolve, reject) => {\n    if (!password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .updatePassword(password)\n      .then(value => {\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .update({\n            lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\n          })\n          .then(value => {\n            analytics.logEvent(\"change_password\");\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.verifyEmailAddress = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .sendEmailVerification()\n      .then(value => {\n        analytics.logEvent(\"verify_email_address\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.deleteAccount = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .delete()\n      .then(value => {\n        analytics.logEvent(\"delete_account\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.getRoles = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .getIdTokenResult()\n      .then(idTokenResult => {\n        resolve(idTokenResult.claims.roles);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.isAdmin = () => {\n  return new Promise((resolve, reject) => {\n    authentication\n      .getRoles()\n      .then(value => {\n        resolve(value.includes(\"admin\"));\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.isPremium = () => {\n  return new Promise((resolve, reject) => {\n    authentication\n      .getRoles()\n      .then(value => {\n        resolve(value.includes(\"premium\"));\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.getName = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n  const lastName = fields.lastName;\n\n  if (firstName) {\n    return firstName;\n  }\n\n  if (username) {\n    return username;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  if (lastName) {\n    return lastName;\n  }\n\n  return null;\n};\n\nauthentication.getFullName = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return `${firstName} ${lastName}`;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  return null;\n};\n\nauthentication.getNameInitials = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return firstName.charAt(0) + lastName.charAt(0);\n  }\n\n  if (firstName) {\n    return firstName.charAt(0);\n  }\n\n  if (username) {\n    return username.charAt(0);\n  }\n\n  if (lastName) {\n    return lastName.charAt(0);\n  }\n\n  if (displayName) {\n    return displayName.charAt(0);\n  }\n\n  return null;\n};\n\nauthentication.getProfileCompletion = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  fields = [\n    fields.photoURL,\n    fields.firstName,\n    fields.lastName,\n    fields.username,\n    fields.email,\n    fields.email && fields.emailVerified\n  ];\n\n  if (!fields) {\n    return null;\n  }\n\n  let profileCompletion = 0;\n\n  fields.forEach(field => {\n    if (field) {\n      profileCompletion += 100 / fields.length;\n    }\n  });\n\n  return Math.floor(profileCompletion);\n};\n\nauthentication.getSecurityRating = (user, userData) => {\n  if (!user || !user.metadata) {\n    return null;\n  }\n\n  let creationTime = user.metadata.creationTime;\n\n  if (!creationTime) {\n    return null;\n  }\n\n  creationTime = moment(creationTime);\n\n  let securityRating = 0;\n\n  if (userData && userData.lastPasswordChange) {\n    let lastPasswordChange = userData.lastPasswordChange;\n\n    if (lastPasswordChange) {\n      lastPasswordChange = moment(lastPasswordChange.toDate());\n\n      if (creationTime.diff(lastPasswordChange, \"days\") >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    }\n  } else {\n    if (moment().diff(creationTime, \"days\") >= 365.242199) {\n      securityRating = 50;\n    } else {\n      securityRating = 100;\n    }\n  }\n\n  return securityRating;\n};\n\nexport default authentication;\n","import camelCase from \"camelcase\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport firebase, { analytics, auth, firestore } from \"../firebase\";\n\nimport {\n  red,\n  pink,\n  purple,\n  deepPurple,\n  indigo,\n  blue,\n  lightBlue,\n  cyan,\n  teal,\n  green,\n  lightGreen,\n  lime,\n  yellow,\n  amber,\n  orange,\n  deepOrange,\n  brown,\n  grey as gray,\n  blueGrey as blueGray\n} from \"@material-ui/core/colors\";\n\nconst colors = {\n  red: {\n    id: \"red\",\n    name: \"Red\",\n    import: red\n  },\n\n  pink: {\n    id: \"pink\",\n    name: \"Pink\",\n    import: pink\n  },\n\n  purple: {\n    id: \"purple\",\n    name: \"Purple\",\n    import: purple\n  },\n\n  deepPurple: {\n    id: \"deep-purple\",\n    name: \"Deep Purple\",\n    import: deepPurple\n  },\n\n  indigo: {\n    id: \"indigo\",\n    name: \"Indigo\",\n    import: indigo\n  },\n\n  blue: {\n    id: \"blue\",\n    name: \"Blue\",\n    import: blue\n  },\n\n  lightBlue: {\n    id: \"light-blue\",\n    name: \"Light Blue\",\n    import: lightBlue\n  },\n\n  cyan: {\n    id: \"cyan\",\n    name: \"Cyan\",\n    import: cyan\n  },\n\n  teal: {\n    id: \"teal\",\n    name: \"Teal\",\n    import: teal\n  },\n\n  green: {\n    id: \"green\",\n    name: \"Green\",\n    import: green\n  },\n\n  lightGreen: {\n    id: \"light-green\",\n    name: \"Light Green\",\n    import: lightGreen\n  },\n\n  lime: {\n    id: \"lime\",\n    name: \"Lime\",\n    import: lime\n  },\n\n  yellow: {\n    id: \"yellow\",\n    name: \"Yellow\",\n    import: yellow\n  },\n\n  amber: {\n    id: \"amber\",\n    name: \"Amber\",\n    import: amber\n  },\n\n  orange: {\n    id: \"orange\",\n    name: \"Orange\",\n    import: orange\n  },\n\n  deepOrange: {\n    id: \"deep-orange\",\n    name: \"Deep Orange\",\n    import: deepOrange\n  },\n\n  brown: {\n    id: \"brown\",\n    name: \"Brown\",\n    import: brown\n  },\n\n  gray: {\n    id: \"gray\",\n    name: \"Gray\",\n    import: gray\n  },\n\n  blueGray: {\n    id: \"blue-gray\",\n    name: \"Blue Gray\",\n    import: blueGray\n  }\n};\n\nconst getColor = colorId => {\n  if (!colorId) {\n    return null;\n  }\n\n  colorId = camelCase(colorId);\n\n  return colors[colorId];\n};\n\nconst defaultPrimaryColor = getColor(process.env.REACT_APP_THEME_PRIMARY_COLOR);\nconst defaultSecondaryColor = getColor(\n  process.env.REACT_APP_THEME_SECONDARY_COLOR\n);\nconst defaultDark = process.env.REACT_APP_THEME_DARK === \"true\";\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: defaultPrimaryColor.import,\n    secondary: defaultSecondaryColor.import,\n    type: defaultDark ? \"dark\" : \"light\"\n  },\n\n  primaryColor: defaultPrimaryColor,\n  secondaryColor: defaultSecondaryColor,\n  dark: defaultDark\n});\n\nconst appearance = {};\n\nappearance.colors = colors;\n\nappearance.defaultPrimaryColor = defaultPrimaryColor;\nappearance.defaultSecondaryColor = defaultSecondaryColor;\nappearance.defaultDark = defaultDark;\n\nappearance.defaultTheme = defaultTheme;\n\nappearance.isDefaultTheme = theme => {\n  if (!theme) {\n    return false;\n  }\n\n  if (\n    theme.primaryColor.id === defaultPrimaryColor.id &&\n    theme.secondaryColor.id === defaultSecondaryColor.id &&\n    theme.dark === defaultDark\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nappearance.createTheme = theme => {\n  if (!theme) {\n    return null;\n  }\n\n  let primaryColor = theme.primaryColor;\n  let secondaryColor = theme.secondaryColor;\n  let dark = theme.dark;\n\n  if (!primaryColor || !secondaryColor) {\n    return null;\n  }\n\n  primaryColor = getColor(primaryColor);\n  secondaryColor = getColor(secondaryColor);\n\n  if (!primaryColor || !secondaryColor) {\n    return null;\n  }\n\n  theme = createMuiTheme({\n    palette: {\n      primary: primaryColor.import,\n      secondary: secondaryColor.import,\n      type: dark ? \"dark\" : \"light\"\n    },\n\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    dark: dark\n  });\n\n  return theme;\n};\n\nappearance.changeTheme = theme => {\n  return new Promise((resolve, reject) => {\n    if (!theme) {\n      reject();\n\n      return;\n    }\n\n    let primaryColor = theme.primaryColor;\n    let secondaryColor = theme.secondaryColor;\n    let dark = theme.dark;\n\n    if (!primaryColor || !secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n    secondaryColor = getColor(secondaryColor);\n\n    if (!primaryColor || !secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        theme: {\n          primaryColor: primaryColor.id,\n          secondaryColor: secondaryColor.id,\n          dark: dark\n        }\n      })\n      .then(value => {\n        analytics.logEvent(\"change_theme\", {\n          theme: theme\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changePrimaryColor = primaryColor => {\n  return new Promise((resolve, reject) => {\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.primaryColor\": primaryColor.id\n      })\n      .then(value => {\n        analytics.logEvent(\"change_primary_color\", {\n          primaryColor: primaryColor.id\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changeSecondaryColor = secondaryColor => {\n  return new Promise((resolve, reject) => {\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    secondaryColor = getColor(secondaryColor);\n\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.secondaryColor\": secondaryColor.id\n      })\n      .then(value => {\n        analytics.logEvent(\"change_secondary_color\", {\n          secondaryColor: secondaryColor.id\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changeDark = dark => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.dark\": dark\n      })\n      .then(value => {\n        analytics.logEvent(\"change_dark\", {\n          dark: dark\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changeSyncAppearance = syncAppearance => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.syncAppearance\": syncAppearance\n      })\n      .then(value => {\n        analytics.logEvent(\"change_sync_appearance\", {\n          syncAppearance: syncAppearance\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.resetTheme = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        theme: firebase.firestore.FieldValue.delete()\n      })\n      .then(value => {\n        analytics.logEvent(\"reset_theme\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nexport default appearance;\n","import { useState } from \"react\";\r\n\r\nexport const store = {\r\n  state: {},\r\n  setState(value) {\r\n    this.state = value;\r\n    this.setters.forEach(setter => setter(this.state));\r\n  },\r\n  setters: []\r\n};\r\n\r\n// Bind the setState function to the store object so\r\n// we don't lose context when calling it elsewhere\r\nstore.setState = store.setState.bind(store);\r\n// console.log(store);\r\n\r\n// this is the custom hook we'll call on components.\r\nexport function useStore() {\r\n  const [state, set] = useState(store.state);\r\n  if (!store.setters.includes(set)) {\r\n    store.setters.push(set);\r\n  }\r\n  //console.log(state);\r\n  return [state, store.setState];\r\n}\r\n","import React from \"react\";\r\nimport { store, useStore } from \"../../constants/hookstore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport firebase from \"../../firebase\";\r\nimport { auth } from \"../../firebase\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    height: 50,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3)\r\n  },\r\n\r\n  contphot: {\r\n    margin: \"5px 25px 10px 25px\"\r\n  },\r\n  photo: {\r\n    width: 300,\r\n    transition: \".3s ease-in-out\",\r\n\r\n    \"&:hover\": {\r\n      transform: \"scale(0.99)\",\r\n      opacity: 0.5\r\n    }\r\n  },\r\n\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to bottom, rgba(0,0,0,0) 0%, \" +\r\n      \"rgba(0,0,0,0) 70%, rgba(0,0,0,0) 100%)\"\r\n  },\r\n  icon: {\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\nconst IMG_BASE_URL = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n  \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\nlet userId = null;\r\nlet userFav = \"test\";\r\nstore.state = \"\";\r\n\r\nconst Movie = ({ movie }) => {\r\n  const classes = useStyles();\r\n  const [MovieId, movieId] = useStore(\"\");\r\n  const user = auth.currentUser;\r\n  const [starFill, setStarFill] = React.useState(false);\r\n  let db = firebase.firestore();\r\n  let favorite = movie.original_title;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  firebase.auth().onAuthStateChanged(function(user) {\r\n    if (user) {\r\n      userId = user.uid;\r\n      userFav = user.favorites;\r\n      !userFav ? (userFav = \"test\") : (userFav = user.favorites);\r\n      console.log(userFav);\r\n    } else {\r\n      console.log(\"no user logged in\");\r\n    }\r\n  });\r\n\r\n  console.log(movie.id);\r\n  console.log(\"this is movie id\");\r\n\r\n  const poster =\r\n    movie.poster === \"N/A\"\r\n      ? DEFAULT_PLACEHOLDER_IMAGE\r\n      : IMG_BASE_URL + movie.poster_path;\r\n\r\n  const getMovieId = () => {\r\n    movieId(movie.id);\r\n  };\r\n\r\n  const addFavorite = () => {\r\n    if (user && !starFill) {\r\n      setStarFill(true);\r\n      db.collection(\"users\")\r\n        .doc(userId)\r\n        .update({\r\n          favorites: firebase.firestore.FieldValue.arrayUnion(favorite)\r\n        });\r\n    }\r\n    if (user && starFill) {\r\n      setStarFill(false);\r\n      console.log(starFill, \"starfil\");\r\n      db.collection(\"users\")\r\n        .doc(userId)\r\n        .update({\r\n          favorites: firebase.firestore.FieldValue.arrayRemove(favorite)\r\n        });\r\n    }\r\n    if (!user) {\r\n      console.log(\"user needs to login\");\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // user && user.favorites.includes(favorite)\r\n  //   ? setStarFill(true)\r\n  //   : setStarFill(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.contphot}>\r\n        <GridListTile\r\n          key={movie.id}\r\n\r\n          // cols={movie.featured ? 3 : 1}\r\n          // rows={movie.featured ? 3 : 1}\r\n        >\r\n          <Link to='./MovieDetail' onClick={getMovieId} value={movie.id}>\r\n            <img className={classes.photo} src={poster} alt={movie.title} />\r\n          </Link>\r\n          <button onClick={addFavorite}>\r\n            {user ? (\r\n              userFav.includes(movie.original_title) ? (\r\n                <StarIcon />\r\n              ) : (\r\n                <StarBorderIcon />\r\n              )\r\n            ) : (\r\n              \"login\"\r\n            )}\r\n          </button>\r\n          <Modal\r\n            aria-labelledby='transition-modal-title'\r\n            aria-describedby='transition-modal-description'\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500\r\n            }}\r\n          >\r\n            <Fade in={open}>\r\n              <div className={classes.paper}>\r\n                <h2 id='transition-modal-title'>\r\n                  Favorites List <StarBorderIcon />\r\n                </h2>\r\n                <p id='transition-modal-description'>\r\n                  Login or Create an account to create a favorites list!\r\n                </p>\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </GridListTile>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n\r\n// <GridListTileBar\r\n//             title={movie.title}\r\n//             actionIcon={\r\n//               <IconButton\r\n//                 aria-label={`star ${movie.title}`}\r\n//                 className={classes.icon}\r\n//                 onClick={addFavorite}\r\n//               >\r\n//                 {starFill && <StarIcon />}\r\n//                 {!starFill && <StarBorderIcon />}\r\n//               </IconButton>\r\n//             }\r\n//             titlePosition='bottom'\r\n//             actionPosition='left'\r\n//             className={classes.titleBar}\r\n//           />\r\n","import React, { useState } from \"react\";\r\n\r\nconst Search = props => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  console.log(searchValue);\r\n\r\n  const handleSearchInputChanges = e => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const callSearchFunction = e => {\r\n    props.search(searchValue);\r\n    resetInputField();\r\n    e.preventDefault();\r\n  };\r\n\r\n  const isEnabled = searchValue.length > 0 && searchValue.length > 0;\r\n\r\n  return (\r\n    <form className='search'>\r\n      <input\r\n        required\r\n        value={searchValue}\r\n        onChange={handleSearchInputChanges}\r\n        type='text'\r\n        name='searchTerm'\r\n        placeholder='Search For Movies'\r\n      />\r\n      <button\r\n        disabled={!isEnabled}\r\n        onClick={callSearchFunction}\r\n        type='submit'\r\n        value='SEARCH_VALUE'\r\n        required\r\n      >\r\n        SEARCH\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst options = [\r\n  \"None\",\r\n  \"Atria\",\r\n  \"Callisto\",\r\n  \"Dione\",\r\n  \"Ganymede\",\r\n  \"Hangouts Call\",\r\n  \"Luna\",\r\n  \"Oberon\",\r\n  \"Phobos\",\r\n  \"Pyxis\",\r\n  \"Sedna\",\r\n  \"Titania\",\r\n  \"Triton\",\r\n  \"Umbriel\"\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nconst Genres = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [data, setData] = useState([]);\r\n  const [Genre, genreValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=dc15dc94ad3132023e29552c1fe96161&language=en-US`\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => setData(data[\"genres\"]));\r\n  }, []);\r\n\r\n  console.log(props);\r\n  console.log(\"this is props\");\r\n\r\n  const setGenreValue = e => {\r\n    props.genre(e.target.value);\r\n  };\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = e => {\r\n    props.genre(e.target.value);\r\n    setAnchorEl(null);\r\n  };\r\n  // my genre logic\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label='more'\r\n        aria-controls='long-menu'\r\n        aria-haspopup='true'\r\n        onClick={handleClick}\r\n      >\r\n        <p>Genres</p> <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id='long-menu'\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: \"20ch\"\r\n          }\r\n        }}\r\n      >\r\n        {data.map(genre => (\r\n          <MenuItem\r\n            key={genre.id}\r\n            selected={genre === \"Pyxis\"}\r\n            onClick={handleClose}\r\n            value={genre.id}\r\n            data={Genre}\r\n          >\r\n            {genre.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default Genres;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport \"../../App.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Movie from \"../Movie\";\r\nimport Search from \"../Search\";\r\nimport Genres from \"../Genres\";\r\n\r\nconst MOVIE_API_URL =\r\n  \"https://api.themoviedb.org/3/search/movie?api_key=dc15dc94ad3132023e29552c1fe96161&query=Batman\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  movies: [],\r\n  errorMessage: null\r\n};\r\n// console.log({ Movie });\r\n// console.log({ Genres });\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_MOVIES_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: null\r\n      };\r\n    case \"SEARCH_MOVIES_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        movies: action.payload\r\n      };\r\n    case \"SEARCH_MOVIES_FAILURE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//`https://api.themoviedb.org/3/movie/${movie.id}?api_key=dc15dc94ad3132023e29552c1fe96161&language=en-US`\r\n\r\nconst MainMovie = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    fetch(MOVIE_API_URL)\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: jsonResponse.results\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // *************Search\r\n\r\n  const search = searchValue => {\r\n    console.log({ searchValue });\r\n    console.log(\"searchvalue\");\r\n    dispatch({\r\n      type: \"SEARCH_MOVIES_REQUEST\"\r\n    });\r\n\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=dc15dc94ad3132023e29552c1fe96161&query=${searchValue}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        console.log(\"this is search\");\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: jsonResponse.results\r\n        });\r\n      });\r\n  };\r\n\r\n  // ************Genres\r\n\r\n  const genre = Genre => {\r\n    console.log(Genre);\r\n    console.log(\"genre\");\r\n    dispatch({\r\n      type: \"SEARCH_MOVIES_REQUEST\"\r\n    });\r\n\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=dc15dc94ad3132023e29552c1fe96161&language=pt-BR&with_genres=${Genre}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        console.log(\"yes to genres\");\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: jsonResponse.results\r\n        });\r\n      });\r\n  };\r\n\r\n  const { movies, errorMessage, loading } = state;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Search search={search} />\r\n      <Genres genre={genre} />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction='row'\r\n        alignItems='center'\r\n        justify='center'\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        {loading && !errorMessage ? (\r\n          <span>loading... </span>\r\n        ) : errorMessage ? (\r\n          <div className='errorMessage'>{errorMessage}</div>\r\n        ) : (\r\n          movies.map((movie, index) => (\r\n            <Movie key={`${index}-${movie.title}`} movie={movie} />\r\n          ))\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainMovie;\r\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport MainMovie from \"../MainMovie\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nclass EmptyState extends Component {\n  render() {\n    // Properties\n    const { type, size, padding, icon, title, description } = this.props;\n\n    let fontSize;\n    let variant;\n\n    if (size === \"small\") {\n      fontSize = \"h3.fontSize\";\n      variant = \"h6\";\n    } else if (size === \"medium\") {\n      fontSize = \"h2.fontSize\";\n      variant = \"h5\";\n    } else if (size === \"big\") {\n      fontSize = \"h1.fontSize\";\n      variant = \"h4\";\n    }\n\n    if (type === \"content\") {\n      return (\n        // <Box\n        //   style={{ transform: \"translate(-50%, -50%)\" }}\n        //   position='absolute'\n        //   top='50%'\n        //   left='50%'\n        //   textAlign='center'\n        // >\n        <MainMovie />\n        //</Box>\n      );\n    }\n\n    if (type === \"card\") {\n      return (\n        <Box padding={padding} textAlign='center'>\n          {icon && (\n            <Box clone color='text.secondary' fontSize={fontSize}>\n              {icon}\n            </Box>\n          )}\n\n          {title && (\n            <Typography color='textSecondary' variant={variant}>\n              {title}\n            </Typography>\n          )}\n\n          {description && (\n            <Typography color='textSecondary' variant='body1'>\n              {description}\n            </Typography>\n          )}\n        </Box>\n      );\n    }\n\n    return null;\n  }\n}\n\nEmptyState.defaultProps = {\n  type: \"content\",\n  size: \"medium\",\n  padding: 2\n};\n\nEmptyState.propTypes = {\n  // Properties\n  type: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  padding: PropTypes.number,\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default EmptyState;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport * as Sentry from \"@sentry/browser\";\n\nimport { Error as ErrorIcon } from \"@material-ui/icons\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      eventId: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    Sentry.withScope(scope => {\n      scope.setExtras(errorInfo);\n\n      const eventId = Sentry.captureException(error);\n\n      this.setState({\n        eventId: eventId\n      });\n    });\n  }\n\n  render() {\n    // Properties\n    const { children } = this.props;\n\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return <EmptyState icon={<ErrorIcon />} title=\"Something went wrong\" />;\n    }\n\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  // Properties\n  children: PropTypes.array.isRequired\n};\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  center: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\"\n  }\n});\n\nclass LaunchScreen extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.center}>\n        <CircularProgress />\n      </div>\n    );\n  }\n}\n\nLaunchScreen.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchScreen);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { Avatar, ListItemAvatar } from \"@material-ui/core\";\n\nimport { AccountCircle as AccountCircleIcon } from \"@material-ui/icons\";\nimport { Person as PersonIcon } from \"@material-ui/icons\";\n\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  nameInitials: {\n    cursor: \"default\"\n  }\n});\n\nclass UserAvatar extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { context, user, defaultCursor } = this.props;\n\n    if (context === \"standalone\") {\n      if (!user) {\n        return <AccountCircleIcon />;\n      }\n\n      const photoUrl = user.photoURL;\n\n      if (photoUrl) {\n        return <Avatar alt=\"Avatar\" src={photoUrl} />;\n      }\n\n      const nameInitials = authentication.getNameInitials({\n        ...user\n      });\n\n      if (nameInitials) {\n        return (\n          <Avatar alt=\"Avatar\">\n            <span className={defaultCursor && classes.nameInitials}>\n              {nameInitials}\n            </span>\n          </Avatar>\n        );\n      }\n\n      return <AccountCircleIcon />;\n    }\n\n    if (context === \"list\") {\n      if (!user) {\n        return (\n          <ListItemAvatar>\n            <Avatar>\n              <PersonIcon />\n            </Avatar>\n          </ListItemAvatar>\n        );\n      }\n\n      const photoUrl = user.photoURL;\n\n      if (photoUrl) {\n        return (\n          <ListItemAvatar>\n            <Avatar alt=\"Avatar\" src={photoUrl} />\n          </ListItemAvatar>\n        );\n      }\n\n      const nameInitials = authentication.getNameInitials({\n        ...user\n      });\n\n      if (nameInitials) {\n        return (\n          <ListItemAvatar>\n            <Avatar alt=\"Avatar\">\n              <span className={defaultCursor && classes.nameInitials}>\n                {nameInitials}\n              </span>\n            </Avatar>\n          </ListItemAvatar>\n        );\n      }\n\n      return (\n        <ListItemAvatar>\n          <Avatar>\n            <PersonIcon />\n          </Avatar>\n        </ListItemAvatar>\n      );\n    }\n\n    return null;\n  }\n}\n\nUserAvatar.defaultProps = {\n  context: \"standalone\"\n};\n\nUserAvatar.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  context: PropTypes.string,\n  user: PropTypes.object.isRequired,\n  defaultCursor: PropTypes.bool\n};\n\nexport default withStyles(styles)(UserAvatar);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Box,\n  ButtonGroup,\n  Button,\n  IconButton,\n  Divider,\n  Menu,\n  MenuItem\n} from \"@material-ui/core\";\n\nimport UserAvatar from \"../UserAvatar\";\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = event => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  render() {\n    // Properties\n    const { performingAction, user, userData, roles } = this.props;\n\n    // Events\n    const {\n      onAboutClick,\n      onSettingsClick,\n      onSignOutClick,\n      onSignUpClick,\n      onSignInClick\n    } = this.props;\n\n    const { menu } = this.state;\n\n    const menuItems = [\n      {\n        name: \"About\",\n        onClick: onAboutClick\n      },\n      {\n        name: \"Profile\",\n        to: user ? `/user/${user.uid}` : null\n      },\n      {\n        name: \"Settings\",\n        onClick: onSettingsClick\n      },\n      {\n        name: \"Sign out\",\n        divide: true,\n        onClick: onSignOutClick\n      }\n    ];\n\n    return (\n      <AppBar color='dark' position='static'>\n        <Toolbar>\n          <Box display='flex' flexGrow={1}>\n            <Typography color='dark' variant='h6'>\n              <Link to='/'>My Movie App</Link>\n            </Typography>\n          </Box>\n\n          {user && (\n            <>\n              {roles.includes(\"admin\") && (\n                <Box mr={1}>\n                  <Button\n                    color='inherit'\n                    component={Link}\n                    to='/admin'\n                    variant='outlined'\n                  >\n                    Admin\n                  </Button>\n                </Box>\n              )}\n\n              <IconButton\n                color='inherit'\n                disabled={performingAction}\n                onClick={this.openMenu}\n              >\n                <UserAvatar user={Object.assign(user, userData)} />\n              </IconButton>\n\n              <Menu\n                anchorEl={menu.anchorEl}\n                open={Boolean(menu.anchorEl)}\n                onClose={this.closeMenu}\n              >\n                {menuItems.map((menuItem, index) => {\n                  if (\n                    menuItem.hasOwnProperty(\"condition\") &&\n                    !menuItem.condition\n                  ) {\n                    return null;\n                  }\n\n                  let component = null;\n\n                  if (menuItem.to) {\n                    component = (\n                      <MenuItem\n                        key={index}\n                        component={Link}\n                        to={menuItem.to}\n                        onClick={this.closeMenu}\n                      >\n                        {menuItem.name}\n                      </MenuItem>\n                    );\n                  } else {\n                    component = (\n                      <MenuItem\n                        key={index}\n                        onClick={() => {\n                          this.closeMenu();\n\n                          menuItem.onClick();\n                        }}\n                      >\n                        {menuItem.name}\n                      </MenuItem>\n                    );\n                  }\n\n                  if (menuItem.divide) {\n                    return (\n                      <span key={index}>\n                        <Divider />\n\n                        {component}\n                      </span>\n                    );\n                  }\n\n                  return component;\n                })}\n              </Menu>\n            </>\n          )}\n\n          {!user && (\n            <ButtonGroup\n              color='inherit'\n              disabled={performingAction}\n              variant='outlined'\n            >\n              <Button onClick={onSignUpClick}>Sign up</Button>\n              <Button onClick={onSignInClick}>Sign in</Button>\n            </ButtonGroup>\n          )}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.defaultProps = {\n  performingAction: false\n};\n\nBar.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n\n  // Events\n  onAboutClick: PropTypes.func.isRequired,\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default Bar;\n","import { useState, useEffect } from \"react\";\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function fetchUrl() {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    setData(json);\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    fetchUrl();\r\n  }, []);\r\n  return [data, loading];\r\n}\r\nexport { useFetch };\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { auth } from \"../../firebase\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useStore } from \"../../constants/hookstore\";\r\nimport { useFetch } from \"../../constants/hooks\";\r\n\r\nimport firebase from \"../../firebase\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345\r\n  }\r\n});\r\n\r\nlet userId = null;\r\n\r\nexport default function MovieDetail(props) {\r\n  const [name, setName] = useStore();\r\n  const [favbut, setFavbut] = useState(true);\r\n  const classes = useStyles();\r\n  const MovieId = useStore();\r\n  const movie_id = MovieId[0];\r\n  const user = auth.currentUser;\r\n  let db = firebase.firestore();\r\n\r\n  console.log(userId);\r\n\r\n  const [data] = useFetch(\r\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=dc15dc94ad3132023e29552c1fe96161&language=en-US`\r\n  );\r\n  let favorite = data.original_title;\r\n\r\n  firebase.auth().onAuthStateChanged(function(user) {\r\n    if (user) {\r\n      userId = user.uid;\r\n    } else {\r\n      console.log(\"no user logged in\");\r\n    }\r\n  });\r\n\r\n  //**ADD TO FAVORITES\r\n\r\n  const onCreate = () => {\r\n    // console.log(favbut, \"button state add\");\r\n    setFavbut(false);\r\n    db.collection(\"users\")\r\n      .doc(userId)\r\n      .update({\r\n        favorites: firebase.firestore.FieldValue.arrayUnion(favorite)\r\n      });\r\n  };\r\n\r\n  const onRemove = () => {\r\n    // console.log(favbut, \"button state remove\");\r\n    setFavbut(true);\r\n    db.collection(\"users\")\r\n      .doc(userId)\r\n      .update({\r\n        favorites: firebase.firestore.FieldValue.arrayRemove(favorite)\r\n      });\r\n  };\r\n\r\n  const onLogin = () => {\r\n    console.log(\"button state login\");\r\n  };\r\n\r\n  // ****************\r\n\r\n  const imagepath = `https://image.tmdb.org/t/p/w500/${data.poster_path}`;\r\n\r\n  //*end movie logic*\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={5}\r\n      direction='column'\r\n      alignItems='center'\r\n      justify='center'\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <Grid item xs={10}>\r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component='img'\r\n              alt='{data.original_title}'\r\n              image={imagepath}\r\n              title={data.original_title}\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant='h5' component='h2'>\r\n                {data.original_title}\r\n              </Typography>\r\n              <Typography variant='body2' color='textSecondary' component='p'>\r\n                {data.overview}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            {user &&\r\n              ((favbut === true && (\r\n                <Button\r\n                  size='small'\r\n                  color='primary'\r\n                  value={data.original_title}\r\n                  onClick={onCreate}\r\n                >\r\n                  Add To Favorites\r\n                </Button>\r\n              )) || (\r\n                <Button\r\n                  size='small'\r\n                  color='primary'\r\n                  value={data.original_title}\r\n                  onClick={onRemove}\r\n                >\r\n                  Remove From Favorites\r\n                </Button>\r\n              ))}\r\n            {!user && (\r\n              <Button\r\n                size='small'\r\n                color='primary'\r\n                value={data.original_title}\r\n                onClick={onLogin}\r\n              >\r\n                Login\r\n              </Button>\r\n            )}\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport { auth } from \"../../firebase\";\n\nimport { Home as HomeIcon } from \"@material-ui/icons\";\n\nimport authentication from \"../../services/authentication\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass HomeContent extends Component {\n  signInWithEmailLink = () => {\n    const { user } = this.props;\n\n    if (user) {\n      return;\n    }\n\n    const emailLink = window.location.href;\n\n    if (!emailLink) {\n      return;\n    }\n\n    if (auth.isSignInWithEmailLink(emailLink)) {\n      let emailAddress = localStorage.getItem(\"emailAddress\");\n\n      if (!emailAddress) {\n        this.props.history.push(\"/\");\n\n        return;\n      }\n\n      authentication\n        .signInWithEmailLink(emailAddress, emailLink)\n        .then(value => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(\n            `Signed in as ${displayName || emailAddress}`\n          );\n        })\n        .catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case \"auth/expired-action-code\":\n            case \"auth/invalid-email\":\n            case \"auth/user-disabled\":\n              this.props.openSnackbar(message);\n              break;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        })\n        .finally(() => {\n          this.props.history.push(\"/\");\n        });\n    }\n  };\n\n  render() {\n    // Properties\n    const { user } = this.props;\n\n    if (user) {\n      return <EmptyState icon={<HomeIcon />} title='Home' />;\n    }\n\n    return (\n      <EmptyState\n        title='RMUIF'\n        description='This is where the movies will go'\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.signInWithEmailLink();\n  }\n}\n\nHomeContent.propTypes = {\n  // Properties\n  user: PropTypes.object\n};\n\nexport default withRouter(HomeContent);\n","import React, { Component } from \"react\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass AdminContent extends Component {\n  render() {\n    return <EmptyState title=\"Admin\" />;\n  }\n}\n\nexport default AdminContent;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  center: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\"\n  }\n});\n\nfunction Loader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.center}>\n      <CircularProgress />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\r\n// import HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport firebase from \"../../firebase\";\r\n\r\nconst Favorites = props => {\r\n  // const [spells, setSpells] = useState([]);\r\n  const user = firebase.auth().currentUser;\r\n  const userId = firebase.auth().currentUser.uid;\r\n  let db = firebase.firestore();\r\n  let favoritesRef = db.collection(\"users\").doc(userId);\r\n\r\n  console.log(user.uid, \"this is fav props\");\r\n\r\n  const onDelete = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    console.log(value, \"this is ondelete\");\r\n    favoritesRef.update({\r\n      favorites: firebase.firestore.FieldValue.arrayRemove(value)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {user.favorites.map(favorite => (\r\n        <li key={favorite}>\r\n          <p>\r\n            <button\r\n              size='small'\r\n              color='primary'\r\n              value={favorite}\r\n              onClick={onDelete}\r\n            >\r\n              {favorite}\r\n            </button>\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport Favorites from \"../Favorites\";\nimport { Card, CardHeader, useScrollTrigger } from \"@material-ui/core\";\n\nfunction UserCard(props) {\n  const user = props.user;\n\n  console.log(\"this is usercardFavs\", user.favorites);\n  return (\n    <Card>\n      <CardHeader\n        title={`${user.firstName} ${user.lastName}`}\n        subheader={user.username}\n      />\n      <Favorites />\n    </Card>\n  );\n}\n\nUserCard.propTypes = {\n  user: PropTypes.object.isRequired\n};\n\nexport default UserCard;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport { Error as ErrorIcon } from \"@material-ui/icons\";\nimport { PersonOutline as PersonOutlineIcon } from \"@material-ui/icons\";\n\nimport { firestore } from \"../../firebase\";\n\nimport EmptyState from \"../EmptyState\";\n\nimport Loader from \"../Loader\";\nimport UserCard from \"../UserCard\";\n\nconst useStyles = makeStyles({\n  grid: {\n    margin: 0,\n    width: \"100%\"\n  }\n});\n\nfunction UserContent() {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const { userId } = useParams();\n  const classes = useStyles();\n\n  useEffect(() => {\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .onSnapshot(\n        snapshot => {\n          setLoading(false);\n          setUser(snapshot.data());\n        },\n        error => {\n          setLoading(false);\n          setError(error);\n        }\n      );\n  }, [userId]);\n\n  if (error) {\n    return (\n      <EmptyState\n        icon={<ErrorIcon />}\n        title=\"Something went wrong\"\n        description=\"There was an error while trying to fetch the requested user\"\n      />\n    );\n  }\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!user) {\n    return (\n      <EmptyState\n        icon={<PersonOutlineIcon />}\n        title=\"User not found\"\n        description=\"The requested user was not found\"\n      />\n    );\n  }\n\n  return (\n    <Grid className={classes.grid} container justify=\"center\" spacing={5}>\n      <Grid item xs={6}>\n        <UserCard user={user} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default UserContent;\n","import React, { Component } from \"react\";\n\nimport { FindInPage as FindInPageIcon } from \"@material-ui/icons\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass NotFoundContent extends Component {\n  render() {\n    return (\n      <EmptyState\n        icon={<FindInPageIcon />}\n        title=\"Content not found\"\n        description=\"The requested URL was not found on this server\"\n      />\n    );\n  }\n}\n\nexport default NotFoundContent;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { BrowserRouter, Switch, Redirect, Route } from \"react-router-dom\";\nimport MovieDetail from \"../MovieDetail\";\nimport HomeContent from \"../HomeContent\";\nimport AdminContent from \"../AdminContent\";\nimport UserContent from \"../UserContent\";\nimport NotFoundContent from \"../NotFoundContent\";\n\nclass Router extends Component {\n  render() {\n    // Properties\n    const { user, roles, bar } = this.props;\n\n    // Functions\n    const { openSnackbar } = this.props;\n\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\n        {bar}\n\n        <Switch>\n          <Route path='/' exact>\n            <HomeContent user={user} openSnackbar={openSnackbar} />\n          </Route>\n\n          <Route path='/admin'>\n            {user && roles.includes(\"admin\") ? (\n              <AdminContent />\n            ) : (\n              <Redirect to='/' />\n            )}\n          </Route>\n\n          <Route path='/user/:userId'>\n            {user ? <UserContent /> : <Redirect to='/' />}\n          </Route>\n          <Route path='/:MovieId'>\n            <MovieDetail user={user} />\n          </Route>\n          <Route>\n            <NotFoundContent />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nRouter.propTypes = {\n  // Properties\n  user: PropTypes.object,\n  roles: PropTypes.array.isRequired,\n  bar: PropTypes.element,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default Router;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Typography,\n  Tooltip,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText\n} from \"@material-ui/core\";\n\nimport { Close as CloseIcon } from \"@material-ui/icons\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  }\n});\n\nclass AboutDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { user } = this.props;\n\n    return (\n      <Dialog fullWidth maxWidth=\"xs\" {...dialogProps}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">About</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <DialogContent>\n          <List disablePadding>\n            <ListItem>\n              <ListItemText\n                primary=\"Version\"\n                secondary={process.env.REACT_APP_VERSION}\n              />\n            </ListItem>\n\n            {user && (\n              <ListItem>\n                <ListItemText primary=\"UID\" secondary={user.uid} />\n              </ListItem>\n            )}\n          </List>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\nAboutDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object\n};\n\nexport default withStyles(styles)(AboutDialog);\n","import React from \"react\";\n\nimport { Apple as AppleIcon } from \"mdi-material-ui\";\nimport { FacebookBox as FacebookBoxIcon } from \"mdi-material-ui\";\nimport { GithubCircle as GitHubCircleIcon } from \"mdi-material-ui\";\nimport { Google as GoogleIcon } from \"mdi-material-ui\";\nimport { Microsoft as MicrosoftIcon } from \"mdi-material-ui\";\nimport { Twitter as TwitterIcon } from \"mdi-material-ui\";\nimport { Yahoo as YahooIcon } from \"mdi-material-ui\";\n\nconst authProviders = [\n  {\n    providerId: \"apple.com\",\n    color: \"#000000\",\n    icon: <AppleIcon />,\n    name: \"Apple\"\n  },\n  {\n    providerId: \"facebook.com\",\n    color: \"#3c5a99\",\n    icon: <FacebookBoxIcon />,\n    name: \"Facebook\"\n  },\n  {\n    providerId: \"github.com\",\n    color: \"#24292e\",\n    icon: <GitHubCircleIcon />,\n    name: \"GitHub\"\n  },\n  {\n    providerId: \"google.com\",\n    color: \"#4285f4\",\n    icon: <GoogleIcon />,\n    name: \"Google\"\n  },\n  {\n    providerId: \"microsoft.com\",\n    color: \"#f65314\",\n    icon: <MicrosoftIcon />,\n    name: \"Microsoft\"\n  },\n  {\n    providerId: \"twitter.com\",\n    color: \"#1da1f2\",\n    icon: <TwitterIcon />,\n    name: \"Twitter\"\n  },\n  {\n    providerId: \"yahoo.com\",\n    color: \"#410093\",\n    icon: <YahooIcon />,\n    name: \"Yahoo\"\n  }\n];\n\nexport default authProviders;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { Box, ButtonGroup, Button } from \"@material-ui/core\";\n\nimport authProviders from \"../../authProviders\";\n\nclass AuthProviderList extends Component {\n  render() {\n    // Properties\n    const { gutterBottom, performingAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <Box mb={gutterBottom ? 3 : 0}>\n        <ButtonGroup\n          disabled={performingAction}\n          fullWidth\n          orientation=\"vertical\"\n          variant=\"outlined\"\n        >\n          {authProviders.map(authProvider => {\n            const AuthProviderButton = withStyles({\n              root: {\n                color: authProvider.color\n              }\n            })(Button);\n\n            return (\n              <AuthProviderButton\n                key={authProvider.providerId}\n                startIcon={authProvider.icon}\n                onClick={() => onAuthProviderClick(authProvider.providerId)}\n              >\n                {authProvider.name}\n              </AuthProviderButton>\n            );\n          })}\n        </ButtonGroup>\n      </Box>\n    );\n  }\n}\n\nAuthProviderList.defaultProps = {\n  gutterBottom: false,\n  performingAction: false\n};\n\nAuthProviderList.propTypes = {\n  // Properties\n  gutterBottom: PropTypes.bool,\n  performingAction: PropTypes.bool,\n\n  // Events\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default AuthProviderList;\n","const constraints = {\n  firstName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  lastName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  username: {\n    length: {\n      minimum: 2,\n      maximum: 20\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  emailAddress: {\n    email: {\n      message: \"^E-mail address is invalid\"\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  emailAddressConfirmation: {\n    email: {\n      message: \"^E-mail address confirmation is invalid\"\n    },\n\n    equality: {\n      attribute: \"emailAddress\",\n      message: \"^E-mail address confirmation is not equal to e-mail address\"\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  password: {\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  passwordConfirmation: {\n    equality: \"password\",\n\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  }\n};\n\nexport default constraints;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Typography,\n  Tooltip,\n  IconButton,\n  Hidden,\n  Grid,\n  Button,\n  Divider,\n  TextField\n} from \"@material-ui/core\";\n\nimport { Close as CloseIcon } from \"@material-ui/icons\";\n\nimport AuthProviderList from \"../AuthProviderList\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: \"auto\"\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n  emailAddress: \"\",\n  emailAddressConfirmation: \"\",\n  password: \"\",\n  passwordConfirmation: \"\",\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress,\n        emailAddressConfirmation: emailAddressConfirmation,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      },\n      {\n        emailAddress: constraints.emailAddress,\n        emailAddressConfirmation: constraints.emailAddressConfirmation,\n        password: constraints.password,\n        passwordConfirmation: constraints.passwordConfirmation\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState(\n        {\n          performingAction: true,\n          errors: null\n        },\n        () => {\n          authentication\n            .signUpWithEmailAddressAndPassword(emailAddress, password)\n            .then(value => {\n              this.props.dialogProps.onClose();\n            })\n            .catch(reason => {\n              const code = reason.code;\n              const message = reason.message;\n\n              switch (code) {\n                case \"auth/email-already-in-use\":\n                case \"auth/invalid-email\":\n                case \"auth/operation-not-allowed\":\n                case \"auth/weak-password\":\n                  this.props.openSnackbar(message);\n                  return;\n\n                default:\n                  this.props.openSnackbar(message);\n                  return;\n              }\n            })\n            .finally(() => {\n              this.setState({\n                performingAction: false\n              });\n            });\n        }\n      );\n    }\n  };\n\n  signInWithAuthProvider = providerId => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .signInWithAuthProvider(providerId)\n          .then(user => {\n            this.props.dialogProps.onClose(() => {\n              const displayName = user.displayName;\n              const emailAddress = user.email;\n\n              this.props.openSnackbar(\n                `Signed in as ${displayName || emailAddress}`\n              );\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case \"auth/account-exists-with-different-credential\":\n              case \"auth/auth-domain-config-required\":\n              case \"auth/cancelled-popup-request\":\n              case \"auth/operation-not-allowed\":\n              case \"auth/operation-not-supported-in-this-environment\":\n              case \"auth/popup-blocked\":\n              case \"auth/popup-closed-by-user\":\n              case \"auth/unauthorized-domain\":\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleKeyPress = event => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    if (\n      !emailAddress ||\n      !emailAddressConfirmation ||\n      !password ||\n      !passwordConfirmation\n    ) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      this.signUp();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = event => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handleEmailAddressConfirmationChange = event => {\n    const emailAddressConfirmation = event.target.value;\n\n    this.setState({\n      emailAddressConfirmation: emailAddressConfirmation\n    });\n  };\n\n  handlePasswordChange = event => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = event => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation,\n      errors\n    } = this.state;\n\n    return (\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        disableBackdropClick={performingAction}\n        disableEscapeKeyDown={performingAction}\n        {...dialogProps}\n        onKeyPress={this.handleKeyPress}\n        onExited={this.handleExited}\n      >\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">Sign up for an account</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              disabled={performingAction}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <DialogContent>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={\n                        errors && errors.emailAddress\n                          ? errors.emailAddress[0]\n                          : \"\"\n                      }\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddressConfirmation)}\n                      fullWidth\n                      helperText={\n                        errors && errors.emailAddressConfirmation\n                          ? errors.emailAddressConfirmation[0]\n                          : \"\"\n                      }\n                      label=\"E-mail address confirmation\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddressConfirmation}\n                      variant=\"outlined\"\n                      onChange={this.handleEmailAddressConfirmationChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"new-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={\n                        errors && errors.password ? errors.password[0] : \"\"\n                      }\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.passwordConfirmation)}\n                      fullWidth\n                      helperText={\n                        errors && errors.passwordConfirmation\n                          ? errors.passwordConfirmation[0]\n                          : \"\"\n                      }\n                      label=\"Password confirmation\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={passwordConfirmation}\n                      variant=\"outlined\"\n                      onChange={this.handlePasswordConfirmationChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <Hidden smUp>\n          <DialogContent>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={\n                    errors && errors.emailAddress ? errors.emailAddress[0] : \"\"\n                  }\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddressConfirmation)}\n                  fullWidth\n                  helperText={\n                    errors && errors.emailAddressConfirmation\n                      ? errors.emailAddressConfirmation[0]\n                      : \"\"\n                  }\n                  label=\"E-mail address confirmation\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddressConfirmation}\n                  variant=\"outlined\"\n                  onChange={this.handleEmailAddressConfirmationChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"new-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={\n                    errors && errors.password ? errors.password[0] : \"\"\n                  }\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.passwordConfirmation)}\n                  fullWidth\n                  helperText={\n                    errors && errors.passwordConfirmation\n                      ? errors.passwordConfirmation[0]\n                      : \"\"\n                  }\n                  label=\"Password confirmation\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={passwordConfirmation}\n                  variant=\"outlined\"\n                  onChange={this.handlePasswordConfirmationChange}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={\n              !emailAddress ||\n              !emailAddressConfirmation ||\n              !password ||\n              !passwordConfirmation ||\n              performingAction\n            }\n            variant=\"contained\"\n            onClick={this.signUp}\n          >\n            Sign up\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignUpDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Typography,\n  Tooltip,\n  IconButton,\n  Hidden,\n  Grid,\n  Button,\n  Divider,\n  TextField\n} from \"@material-ui/core\";\n\nimport { Close as CloseIcon } from \"@material-ui/icons\";\n\nimport AuthProviderList from \"../AuthProviderList\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: \"auto\"\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n  emailAddress: \"\",\n  password: \"\",\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getSignInButton = () => {\n    const { emailAddress, password, performingAction } = this.state;\n\n    if (emailAddress && !password) {\n      return (\n        <Button\n          color=\"primary\"\n          disabled={!emailAddress || performingAction}\n          variant=\"contained\"\n          onClick={() => this.sendSignInLinkToEmail()}\n        >\n          Send sign-in link\n        </Button>\n      );\n    }\n\n    return (\n      <Button\n        color=\"primary\"\n        disabled={!emailAddress || performingAction}\n        variant=\"contained\"\n        onClick={() => this.signIn()}\n      >\n        Sign in\n      </Button>\n    );\n  };\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress\n      },\n      {\n        emailAddress: constraints.emailAddress\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState(\n        {\n          errors: null\n        },\n        () => {\n          this.setState(\n            {\n              performingAction: true\n            },\n            () => {\n              authentication\n                .resetPassword(emailAddress)\n                .then(value => {\n                  this.props.openSnackbar(\n                    `Sent password reset e-mail to ${emailAddress}`\n                  );\n                })\n                .catch(reason => {\n                  const code = reason.code;\n                  const message = reason.message;\n\n                  switch (code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/missing-android-pkg-name\":\n                    case \"auth/missing-continue-uri\":\n                    case \"auth/missing-ios-bundle-id\":\n                    case \"auth/invalid-continue-uri\":\n                    case \"auth/unauthorized-continue-uri\":\n                    case \"auth/user-not-found\":\n                      this.props.openSnackbar(message);\n                      return;\n\n                    default:\n                      this.props.openSnackbar(message);\n                      return;\n                  }\n                })\n                .finally(() => {\n                  this.setState({\n                    performingAction: false\n                  });\n                });\n            }\n          );\n        }\n      );\n    }\n  };\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress,\n        password: password\n      },\n      {\n        emailAddress: constraints.emailAddress,\n        password: constraints.password\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState(\n        {\n          performingAction: true,\n          errors: null\n        },\n        () => {\n          authentication\n            .signIn(emailAddress, password)\n            .then(user => {\n              this.props.dialogProps.onClose(() => {\n                const displayName = user.displayName;\n                const emailAddress = user.email;\n\n                this.props.openSnackbar(\n                  `Signed in as ${displayName || emailAddress}`\n                );\n              });\n            })\n            .catch(reason => {\n              const code = reason.code;\n              const message = reason.message;\n\n              switch (code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-disabled\":\n                case \"auth/user-not-found\":\n                case \"auth/wrong-password\":\n                  this.props.openSnackbar(message);\n                  return;\n\n                default:\n                  this.props.openSnackbar(message);\n                  return;\n              }\n            })\n            .finally(() => {\n              this.setState({\n                performingAction: false\n              });\n            });\n        }\n      );\n    }\n  };\n\n  sendSignInLinkToEmail = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress\n      },\n      {\n        emailAddress: constraints.emailAddress\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true,\n        errors: null\n      },\n      () => {\n        authentication\n          .sendSignInLinkToEmail(emailAddress)\n          .then(() => {\n            this.props.dialogProps.onClose(() => {\n              this.props.openSnackbar(`Sent sign-in e-mail to ${emailAddress}`);\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case \"auth/argument-error\":\n              case \"auth/invalid-email\":\n              case \"auth/missing-android-pkg-name\":\n              case \"auth/missing-continue-uri\":\n              case \"auth/missing-ios-bundle-id\":\n              case \"auth/invalid-continue-uri\":\n              case \"auth/unauthorized-continue-uri\":\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  signInWithAuthProvider = providerId => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .signInWithAuthProvider(providerId)\n          .then(user => {\n            this.props.dialogProps.onClose(() => {\n              const displayName = user.displayName;\n              const emailAddress = user.email;\n\n              this.props.openSnackbar(\n                `Signed in as ${displayName || emailAddress}`\n              );\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case \"auth/account-exists-with-different-credential\":\n              case \"auth/auth-domain-config-required\":\n              case \"auth/cancelled-popup-request\":\n              case \"auth/operation-not-allowed\":\n              case \"auth/operation-not-supported-in-this-environment\":\n              case \"auth/popup-blocked\":\n              case \"auth/popup-closed-by-user\":\n              case \"auth/unauthorized-domain\":\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleKeyPress = event => {\n    const { emailAddress, password } = this.state;\n\n    if (!emailAddress && !password) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      if (emailAddress && !password) {\n        this.sendSignInLinkToEmail();\n      } else {\n        this.signIn();\n      }\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = event => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handlePasswordChange = event => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const { performingAction, emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        disableBackdropClick={performingAction}\n        disableEscapeKeyDown={performingAction}\n        {...dialogProps}\n        onKeyPress={this.handleKeyPress}\n        onExited={this.handleExited}\n      >\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">Sign in to your account</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              disabled={performingAction}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <DialogContent>\n          <Hidden xsDown>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={\n                        errors && errors.emailAddress\n                          ? errors.emailAddress[0]\n                          : \"\"\n                      }\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"current-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={\n                        errors && errors.password ? errors.password[0] : \"\"\n                      }\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={\n                    errors && errors.emailAddress ? errors.emailAddress[0] : \"\"\n                  }\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"current-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={\n                    errors && errors.password ? errors.password[0] : \"\"\n                  }\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n            </Grid>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={!emailAddress || performingAction}\n            variant=\"outlined\"\n            onClick={this.resetPassword}\n          >\n            Reset password\n          </Button>\n\n          {this.getSignInButton()}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignInDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\nimport moment from \"moment\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  DialogContent,\n  Grid,\n  Typography,\n  Box,\n  Fade,\n  CircularProgress,\n  Badge,\n  Avatar,\n  Fab,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  Hidden,\n  TextField,\n  Tooltip,\n  IconButton,\n  Divider\n} from \"@material-ui/core\";\n\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { Photo as PhotoIcon } from \"@material-ui/icons\";\nimport { CloudUpload as CloudUploadIcon } from \"@material-ui/icons\";\nimport { Person as PersonIcon } from \"@material-ui/icons\";\nimport { Edit as EditIcon } from \"@material-ui/icons\";\nimport { PersonOutline as PersonOutlineIcon } from \"@material-ui/icons\";\nimport { Email as EmailIcon } from \"@material-ui/icons\";\nimport { Warning as WarningIcon } from \"@material-ui/icons\";\nimport { Check as CheckIcon } from \"@material-ui/icons\";\nimport { AccessTime as AccessTimeIcon } from \"@material-ui/icons\";\nimport { DeleteForever as DeleteForeverIcon } from \"@material-ui/icons\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n\n  badge: {\n    top: theme.spacing(2),\n    right: -theme.spacing(2)\n  },\n\n  loadingBadge: {\n    top: \"50%\",\n    right: \"50%\"\n  },\n\n  avatar: {\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n\n  nameInitials: {\n    cursor: \"default\"\n  },\n\n  personIcon: {\n    fontSize: theme.spacing(7)\n  },\n\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n\n    minHeight: \"initial\"\n  }\n});\n\nconst initialState = {\n  profileCompletion: 0,\n  securityRating: 0,\n  showingField: \"\",\n  avatar: null,\n  avatarUrl: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  username: \"\",\n  emailAddress: \"\",\n  performingAction: false,\n  loadingAvatar: false,\n  sentVerificationEmail: false,\n  errors: null\n};\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getNameInitialsOrIcon = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const { classes, userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon className={classes.personIcon} />;\n    }\n\n    const nameInitials = authentication.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return (\n        <Typography className={classes.nameInitials} variant=\"h2\">\n          {nameInitials}\n        </Typography>\n      );\n    }\n\n    return <PersonIcon className={classes.personIcon} />;\n  };\n\n  uploadAvatar = () => {\n    const { avatar } = this.state;\n\n    if (!avatar) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true,\n        loadingAvatar: true\n      },\n      () => {\n        authentication\n          .changeAvatar(avatar)\n          .then(value => {\n            const { user, userData } = this.props;\n\n            this.setState({\n              profileCompletion: authentication.getProfileCompletion({\n                ...user,\n                ...userData\n              })\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false,\n              loadingAvatar: false,\n              avatar: null,\n              avatarUrl: \"\"\n            });\n          });\n      }\n    );\n  };\n\n  removeAvatar = () => {\n    const { user } = this.props;\n\n    const { avatar, avatarUrl } = this.state;\n\n    if (!user.photoURL && !avatar && !avatarUrl) {\n      return;\n    }\n\n    if (\n      (!user.photoURL && avatar && avatarUrl) ||\n      (user.photoURL && avatar && avatarUrl)\n    ) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatar: null,\n        avatarUrl: \"\"\n      });\n    } else if (user.photoURL && !avatar && !avatarUrl) {\n      this.setState(\n        {\n          performingAction: true,\n          loadingAvatar: true\n        },\n        () => {\n          authentication\n            .removeAvatar()\n            .then(value => {\n              const { user, userData } = this.props;\n\n              this.setState({\n                profileCompletion: authentication.getProfileCompletion({\n                  ...user,\n                  ...userData\n                })\n              });\n            })\n            .catch(reason => {\n              const code = reason.code;\n              const message = reason.message;\n\n              switch (code) {\n                default:\n                  this.props.openSnackbar(message);\n                  return;\n              }\n            })\n            .finally(() => {\n              this.setState({\n                performingAction: false,\n                loadingAvatar: false\n              });\n            });\n        }\n      );\n    }\n  };\n\n  showField = fieldId => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = callback => {\n    this.setState(\n      {\n        showingField: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        emailAddress: \"\",\n        errors: null\n      },\n      () => {\n        if (callback && typeof callback === \"function\") {\n          callback();\n        }\n      }\n    );\n  };\n\n  changeFirstName = () => {\n    const { firstName } = this.state;\n\n    const errors = validate(\n      {\n        firstName: firstName\n      },\n      {\n        firstName: constraints.firstName\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { userData } = this.props;\n\n        if (firstName === userData.firstName) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeFirstName(firstName)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  changeLastName = () => {\n    const { lastName } = this.state;\n\n    const errors = validate(\n      {\n        lastName: lastName\n      },\n      {\n        lastName: constraints.lastName\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { userData } = this.props;\n\n        if (lastName === userData.lastName) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeLastName(lastName)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  changeUsername = () => {\n    const { username } = this.state;\n\n    const errors = validate(\n      {\n        username: username\n      },\n      {\n        username: constraints.username\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { userData } = this.props;\n\n        if (username === userData.username) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeUsername(username)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  changeEmailAddress = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress\n      },\n      {\n        emailAddress: constraints.emailAddress\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { user } = this.props;\n\n        if (emailAddress === user.email) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeEmailAddress(emailAddress)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  verifyEmailAddress = () => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .verifyEmailAddress()\n          .then(() => {\n            this.setState(\n              {\n                sentVerificationEmail: true\n              },\n              () => {\n                this.props.openSnackbar(\"Sent verification e-mail\");\n              }\n            );\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  changeField = fieldId => {\n    switch (fieldId) {\n      case \"first-name\":\n        this.changeFirstName();\n        return;\n\n      case \"last-name\":\n        this.changeLastName();\n        return;\n\n      case \"username\":\n        this.changeUsername();\n        return;\n\n      case \"email-address\":\n        this.changeEmailAddress();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.hideFields();\n    } else if (key === \"Enter\") {\n      this.changeField(fieldId);\n    }\n  };\n\n  handleAvatarChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const files = event.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    const avatar = files[0];\n\n    if (!avatar) {\n      return;\n    }\n\n    const fileTypes = [\n      \"image/gif\",\n      \"image/jpeg\",\n      \"image/png\",\n      \"image/webp\",\n      \"image/svg+xml\"\n    ];\n\n    if (!fileTypes.includes(avatar.type)) {\n      return;\n    }\n\n    if (avatar.size > 20 * 1024 * 1024) {\n      return;\n    }\n\n    this.setState({\n      avatar: avatar,\n      avatarUrl: URL.createObjectURL(avatar)\n    });\n  };\n\n  handleFirstNameChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const firstName = event.target.value;\n\n    this.setState({\n      firstName: firstName\n    });\n  };\n\n  handleLastNameChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const lastName = event.target.value;\n\n    this.setState({\n      lastName: lastName\n    });\n  };\n\n  handleUsernameChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  handleEmailAddressChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, userData } = this.props;\n\n    // Events\n    const { onDeleteAccountClick } = this.props;\n\n    const {\n      profileCompletion,\n      securityRating,\n      showingField,\n      performingAction,\n      loadingAvatar,\n      avatar,\n      avatarUrl,\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n      sentVerificationEmail,\n      errors\n    } = this.state;\n\n    const hasFirstName = userData && userData.firstName;\n    const hasLastName = userData && userData.lastName;\n    const hasUsername = userData && userData.username;\n\n    return (\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Box mb={2}>\n          <Hidden xsDown>\n            <Grid alignItems=\"center\" container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Box mb={1.5}>\n                    {avatar && avatarUrl && (\n                      <Badge\n                        classes={{ badge: classes.badge }}\n                        badgeContent={\n                          <Tooltip title=\"Remove\">\n                            <Fab\n                              classes={{ sizeSmall: classes.small }}\n                              color=\"secondary\"\n                              disabled={performingAction}\n                              size=\"small\"\n                              onClick={this.removeAvatar}\n                            >\n                              <CloseIcon fontSize=\"small\" />\n                            </Fab>\n                          </Tooltip>\n                        }\n                      >\n                        {loadingAvatar && (\n                          <Badge\n                            classes={{ badge: classes.loadingBadge }}\n                            badgeContent={\n                              <Fade\n                                style={{ transitionDelay: \"1s\" }}\n                                in={loadingAvatar}\n                                unmountOnExit\n                              >\n                                <CircularProgress size={120} thickness={1.8} />\n                              </Fade>\n                            }\n                          >\n                            <Avatar\n                              className={classes.avatar}\n                              alt=\"Avatar\"\n                              src={avatarUrl}\n                            />\n                          </Badge>\n                        )}\n\n                        {!loadingAvatar && (\n                          <Avatar\n                            className={classes.avatar}\n                            alt=\"Avatar\"\n                            src={avatarUrl}\n                          />\n                        )}\n                      </Badge>\n                    )}\n\n                    {!avatar && !avatarUrl && (\n                      <>\n                        {user.photoURL && (\n                          <Badge\n                            classes={{ badge: classes.badge }}\n                            badgeContent={\n                              <Tooltip title=\"Remove\">\n                                <Fab\n                                  classes={{ sizeSmall: classes.small }}\n                                  color=\"secondary\"\n                                  disabled={performingAction}\n                                  size=\"small\"\n                                  onClick={this.removeAvatar}\n                                >\n                                  <CloseIcon fontSize=\"small\" />\n                                </Fab>\n                              </Tooltip>\n                            }\n                          >\n                            {loadingAvatar && (\n                              <Badge\n                                classes={{ badge: classes.loadingBadge }}\n                                badgeContent={\n                                  <Fade\n                                    style={{ transitionDelay: \"1s\" }}\n                                    in={loadingAvatar}\n                                    unmountOnExit\n                                  >\n                                    <CircularProgress\n                                      size={120}\n                                      thickness={1.8}\n                                    />\n                                  </Fade>\n                                }\n                              >\n                                <Avatar\n                                  className={classes.avatar}\n                                  alt=\"Avatar\"\n                                  src={user.photoURL}\n                                />\n                              </Badge>\n                            )}\n\n                            {!loadingAvatar && (\n                              <Avatar\n                                className={classes.avatar}\n                                alt=\"Avatar\"\n                                src={user.photoURL}\n                              />\n                            )}\n                          </Badge>\n                        )}\n\n                        {!user.photoURL && (\n                          <>\n                            {loadingAvatar && (\n                              <Badge\n                                classes={{ badge: classes.loadingBadge }}\n                                badgeContent={\n                                  <Fade\n                                    style={{ transitionDelay: \"1s\" }}\n                                    in={loadingAvatar}\n                                    unmountOnExit\n                                  >\n                                    <CircularProgress\n                                      size={120}\n                                      thickness={1.8}\n                                    />\n                                  </Fade>\n                                }\n                              >\n                                <Avatar className={classes.avatar} alt=\"Avatar\">\n                                  {this.getNameInitialsOrIcon()}\n                                </Avatar>\n                              </Badge>\n                            )}\n\n                            {!loadingAvatar && (\n                              <Avatar className={classes.avatar} alt=\"Avatar\">\n                                {this.getNameInitialsOrIcon()}\n                              </Avatar>\n                            )}\n                          </>\n                        )}\n                      </>\n                    )}\n                  </Box>\n\n                  {avatar && avatarUrl && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      startIcon={<CloudUploadIcon />}\n                      variant=\"contained\"\n                      onClick={this.uploadAvatar}\n                    >\n                      Upload\n                    </Button>\n                  )}\n\n                  {!avatar && !avatarUrl && (\n                    <>\n                      <input\n                        id=\"avatar-input\"\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n                        onChange={this.handleAvatarChange}\n                      />\n\n                      <label htmlFor=\"avatar-input\">\n                        <Button\n                          color=\"primary\"\n                          component=\"span\"\n                          disabled={performingAction}\n                          startIcon={<PhotoIcon />}\n                          variant=\"contained\"\n                        >\n                          Choose...\n                        </Button>\n                      </label>\n                    </>\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile completion</Typography>\n\n                  {profileCompletion === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion !== 0 && profileCompletion !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security rating</Typography>\n\n                  {securityRating === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating !== 0 && securityRating !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <Box textAlign=\"center\" mb={3}>\n              <Box mb={1.5}>\n                {avatar && avatarUrl && (\n                  <Badge\n                    classes={{ badge: classes.badge }}\n                    badgeContent={\n                      <Tooltip title=\"Remove\">\n                        <Fab\n                          classes={{ sizeSmall: classes.small }}\n                          color=\"secondary\"\n                          disabled={performingAction}\n                          size=\"small\"\n                          onClick={this.removeAvatar}\n                        >\n                          <CloseIcon fontSize=\"small\" />\n                        </Fab>\n                      </Tooltip>\n                    }\n                  >\n                    {loadingAvatar && (\n                      <Badge\n                        classes={{ badge: classes.loadingBadge }}\n                        badgeContent={\n                          <Fade\n                            style={{ transitionDelay: \"1s\" }}\n                            in={loadingAvatar}\n                            unmountOnExit\n                          >\n                            <CircularProgress size={120} thickness={1.8} />\n                          </Fade>\n                        }\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          alt=\"Avatar\"\n                          src={avatarUrl}\n                        />\n                      </Badge>\n                    )}\n\n                    {!loadingAvatar && (\n                      <Avatar\n                        className={classes.avatar}\n                        alt=\"Avatar\"\n                        src={avatarUrl}\n                      />\n                    )}\n                  </Badge>\n                )}\n\n                {!avatar && !avatarUrl && (\n                  <>\n                    {user.photoURL && (\n                      <Badge\n                        classes={{ badge: classes.badge }}\n                        badgeContent={\n                          <Tooltip title=\"Remove\">\n                            <Fab\n                              classes={{ sizeSmall: classes.small }}\n                              color=\"secondary\"\n                              disabled={performingAction}\n                              size=\"small\"\n                              onClick={this.removeAvatar}\n                            >\n                              <CloseIcon fontSize=\"small\" />\n                            </Fab>\n                          </Tooltip>\n                        }\n                      >\n                        {loadingAvatar && (\n                          <Badge\n                            classes={{ badge: classes.loadingBadge }}\n                            badgeContent={\n                              <CircularProgress size={120} thickness={1.8} />\n                            }\n                          >\n                            <Avatar\n                              className={classes.avatar}\n                              alt=\"Avatar\"\n                              src={user.photoURL}\n                            />\n                          </Badge>\n                        )}\n\n                        {!loadingAvatar && (\n                          <Avatar\n                            className={classes.avatar}\n                            alt=\"Avatar\"\n                            src={user.photoURL}\n                          />\n                        )}\n                      </Badge>\n                    )}\n\n                    {!user.photoURL && (\n                      <>\n                        {loadingAvatar && (\n                          <Badge\n                            classes={{ badge: classes.loadingBadge }}\n                            badgeContent={\n                              <Fade\n                                style={{ transitionDelay: \"1s\" }}\n                                in={loadingAvatar}\n                                unmountOnExit\n                              >\n                                <CircularProgress size={120} thickness={1.8} />\n                              </Fade>\n                            }\n                          >\n                            <Avatar className={classes.avatar} alt=\"Avatar\">\n                              {this.getNameInitialsOrIcon()}\n                            </Avatar>\n                          </Badge>\n                        )}\n\n                        {!loadingAvatar && (\n                          <Avatar className={classes.avatar} alt=\"Avatar\">\n                            {this.getNameInitialsOrIcon()}\n                          </Avatar>\n                        )}\n                      </>\n                    )}\n                  </>\n                )}\n              </Box>\n\n              {avatar && avatarUrl && (\n                <Button\n                  color=\"primary\"\n                  disabled={performingAction}\n                  startIcon={<CloudUploadIcon />}\n                  variant=\"contained\"\n                  onClick={this.uploadAvatar}\n                >\n                  Upload\n                </Button>\n              )}\n\n              {!avatar && !avatarUrl && (\n                <>\n                  <input\n                    id=\"avatar-input\"\n                    type=\"file\"\n                    hidden\n                    accept=\"image/*\"\n                    onChange={this.handleAvatarChange}\n                  />\n\n                  <label htmlFor=\"avatar-input\">\n                    <Button\n                      color=\"primary\"\n                      component=\"span\"\n                      disabled={performingAction}\n                      startIcon={<PhotoIcon />}\n                      variant=\"contained\"\n                    >\n                      Choose...\n                    </Button>\n                  </label>\n                </>\n              )}\n            </Box>\n\n            <Grid container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile completion</Typography>\n\n                  {profileCompletion === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion !== 0 && profileCompletion !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security rating</Typography>\n\n                  {securityRating === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating !== 0 && securityRating !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n        </Box>\n\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasFirstName && (\n              <ListItemIcon>\n                <Tooltip title=\"No first name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"first-name\" && (\n              <TextField\n                autoComplete=\"given-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.firstName)}\n                fullWidth\n                helperText={\n                  errors && errors.firstName\n                    ? errors.firstName[0]\n                    : \"Press Enter to change your first name\"\n                }\n                label=\"First name\"\n                placeholder={hasFirstName && userData.firstName}\n                required\n                type=\"text\"\n                value={firstName}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"first-name\")}\n                onChange={this.handleFirstNameChange}\n              />\n            )}\n\n            {showingField !== \"first-name\" && (\n              <>\n                <ListItemText\n                  primary=\"First name\"\n                  secondary={\n                    hasFirstName\n                      ? userData.firstName\n                      : \"You don’t have a first name\"\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  {hasFirstName && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"first-name\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!hasFirstName && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"first-name\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasLastName && (\n              <ListItemIcon>\n                <Tooltip title=\"No last name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"last-name\" && (\n              <TextField\n                autoComplete=\"family-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.lastName)}\n                fullWidth\n                helperText={\n                  errors && errors.lastName\n                    ? errors.lastName[0]\n                    : \"Press Enter to change your last name\"\n                }\n                label=\"Last name\"\n                placeholder={hasLastName && userData.lastName}\n                required\n                type=\"text\"\n                value={lastName}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"last-name\")}\n                onChange={this.handleLastNameChange}\n              />\n            )}\n\n            {showingField !== \"last-name\" && (\n              <>\n                <ListItemText\n                  primary=\"Last name\"\n                  secondary={\n                    hasLastName\n                      ? userData.lastName\n                      : \"You don’t have a last name\"\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  {hasLastName && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"last-name\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!hasLastName && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"last-name\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonOutlineIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasUsername && (\n              <ListItemIcon>\n                <Tooltip title=\"No username\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"username\" && (\n              <TextField\n                autoComplete=\"username\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.username)}\n                fullWidth\n                helperText={\n                  errors && errors.username\n                    ? errors.username[0]\n                    : \"Press Enter to change your username\"\n                }\n                label=\"Username\"\n                placeholder={hasUsername && userData.username}\n                required\n                type=\"text\"\n                value={username}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"username\")}\n                onChange={this.handleUsernameChange}\n              />\n            )}\n\n            {showingField !== \"username\" && (\n              <>\n                <ListItemText\n                  primary=\"Username\"\n                  secondary={\n                    hasUsername\n                      ? userData.username\n                      : \"You don’t have a username\"\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  {hasUsername && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"username\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!hasUsername && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"username\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <EmailIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {user.email && (\n              <ListItemIcon>\n                <>\n                  {user.emailVerified && (\n                    <Tooltip title=\"Verified\">\n                      <CheckIcon color=\"primary\" />\n                    </Tooltip>\n                  )}\n\n                  {!user.emailVerified && (\n                    <Tooltip title=\"Not verified\">\n                      <WarningIcon color=\"error\" />\n                    </Tooltip>\n                  )}\n                </>\n              </ListItemIcon>\n            )}\n\n            {!user.email && (\n              <ListItemIcon>\n                <Tooltip title=\"No e-mail address\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"email-address\" && (\n              <TextField\n                autoComplete=\"email\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.emailAddress)}\n                fullWidth\n                helperText={\n                  errors && errors.emailAddress\n                    ? errors.emailAddress[0]\n                    : \"Press Enter to change your e-mail address\"\n                }\n                label=\"E-mail address\"\n                placeholder={user.email}\n                required\n                type=\"email\"\n                value={emailAddress}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"email-address\")}\n                onChange={this.handleEmailAddressChange}\n              />\n            )}\n\n            {showingField !== \"email-address\" && (\n              <>\n                <ListItemText\n                  primary=\"E-mail address\"\n                  secondary={\n                    user.email ? user.email : \"You don’t have an e-mail address\"\n                  }\n                />\n\n                {user.email && !user.emailVerified && (\n                  <Box clone mr={7}>\n                    <ListItemSecondaryAction>\n                      <Tooltip title=\"Verify\">\n                        <div>\n                          <IconButton\n                            color=\"secondary\"\n                            disabled={performingAction || sentVerificationEmail}\n                            onClick={this.verifyEmailAddress}\n                          >\n                            <CheckIcon />\n                          </IconButton>\n                        </div>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </Box>\n                )}\n\n                <ListItemSecondaryAction>\n                  {user.email && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"email-address\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!user.email && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"email-address\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <AccessTimeIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <Hidden xsDown>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format(\"LLLL\")}\n              />\n            </Hidden>\n\n            <Hidden smUp>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format(\"llll\")}\n              />\n            </Hidden>\n          </ListItem>\n\n          <Box mt={1} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <DeleteForeverIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Delete account\"\n              secondary=\"Accounts can’t be recovered\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={performingAction}\n                variant=\"contained\"\n                onClick={onDeleteAccountClick}\n              >\n                Delete\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    const { user, userData } = this.props;\n\n    this.setState({\n      profileCompletion: authentication.getProfileCompletion({\n        ...user,\n        ...userData\n      }),\n      securityRating: authentication.getSecurityRating(user, userData)\n    });\n  }\n\n  componentWillUnmount() {\n    const { avatarUrl } = this.state;\n\n    if (avatarUrl) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatarUrl: \"\"\n      });\n    }\n  }\n}\n\nAccountTab.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport {\n  DialogContent,\n  Box,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Divider,\n  Hidden,\n  Checkbox,\n  Switch,\n  Button\n} from \"@material-ui/core\";\n\nimport { FiberManualRecord as FiberManualRecordIcon } from \"@material-ui/icons\";\nimport { Brightness4 as Brightness4Icon } from \"@material-ui/icons\";\nimport { FormatColorReset as FormatColorResetIcon } from \"@material-ui/icons\";\n\nimport appearance from \"../../services/appearance\";\n\nclass AppearanceTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false,\n      primaryColorLabelWidth: 0,\n      secondaryColorLabelWidth: 0\n    };\n\n    this.primaryColorLabel = React.createRef();\n    this.secondaryColorLabel = React.createRef();\n  }\n\n  handlePrimaryColorChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const primaryColor = event.target.value;\n\n    if (!primaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.primaryColor.id === primaryColor) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .changeTheme({\n            primaryColor: primaryColor,\n            secondaryColor: theme.secondaryColor.id,\n            dark: theme.dark\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleSecondaryColorChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const secondaryColor = event.target.value;\n\n    if (!secondaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.secondaryColor.id === secondaryColor) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .changeTheme({\n            primaryColor: theme.primaryColor.id,\n            secondaryColor: secondaryColor,\n            dark: theme.dark\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleDarkModeChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const dark = event.target.checked;\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.dark === dark) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .changeTheme({\n            primaryColor: theme.primaryColor.id,\n            secondaryColor: theme.secondaryColor.id,\n            dark: dark\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleResetThemeClick = () => {\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (appearance.isDefaultTheme(theme)) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .resetTheme()\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    if (!theme) {\n      return null;\n    }\n\n    const {\n      performingAction,\n      primaryColorLabelWidth,\n      secondaryColorLabelWidth\n    } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <Box mb={1}>\n            <ListItem>\n              <Hidden xsDown>\n                <ListItemIcon>\n                  <FiberManualRecordIcon color=\"primary\" />\n                </ListItemIcon>\n              </Hidden>\n\n              <FormControl\n                disabled={performingAction}\n                fullWidth\n                variant=\"outlined\"\n              >\n                <InputLabel ref={this.primaryColorLabel}>\n                  Primary color\n                </InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.primaryColor.id}\n                    labelWidth={primaryColorLabelWidth}\n                    onChange={this.handlePrimaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>\n                          {color.name}\n                        </option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.primaryColor.id}\n                    labelWidth={primaryColorLabelWidth}\n                    onChange={this.handlePrimaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>\n                          {color.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <Hidden xsDown>\n                <ListItemIcon>\n                  <FiberManualRecordIcon color=\"secondary\" />\n                </ListItemIcon>\n              </Hidden>\n\n              <FormControl\n                disabled={performingAction}\n                fullWidth\n                variant=\"outlined\"\n              >\n                <InputLabel ref={this.secondaryColorLabel}>\n                  Secondary color\n                </InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.secondaryColor.id}\n                    labelWidth={secondaryColorLabelWidth}\n                    onChange={this.handleSecondaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>\n                          {color.name}\n                        </option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.secondaryColor.id}\n                    labelWidth={secondaryColorLabelWidth}\n                    onChange={this.handleSecondaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>\n                          {color.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <Brightness4Icon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Dark mode\"\n              secondary=\"Displays mostly dark surfaces\"\n            />\n\n            <ListItemSecondaryAction>\n              <Hidden xsDown>\n                <Checkbox\n                  color=\"primary\"\n                  checked={theme.dark}\n                  onChange={this.handleDarkModeChange}\n                />\n              </Hidden>\n\n              <Hidden smUp>\n                <Switch\n                  color=\"primary\"\n                  checked={theme.dark}\n                  onChange={this.handleDarkModeChange}\n                />\n              </Hidden>\n            </ListItemSecondaryAction>\n          </ListItem>\n\n          <Box mt={2} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <FormatColorResetIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Reset theme\"\n              secondary={\n                appearance.isDefaultTheme(theme)\n                  ? \"No changes made\"\n                  : \"Changes will be reset\"\n              }\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={appearance.isDefaultTheme(theme) || performingAction}\n                variant=\"contained\"\n                onClick={this.handleResetThemeClick}\n              >\n                Reset\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      primaryColorLabelWidth: this.primaryColorLabel.current.offsetWidth,\n      secondaryColorLabelWidth: this.secondaryColorLabel.current.offsetWidth\n    });\n  }\n}\n\nAppearanceTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default AppearanceTab;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport {\n  DialogContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  Box,\n  Tooltip,\n  IconButton\n} from \"@material-ui/core\";\n\nimport { Link as LinkIcon } from \"@material-ui/icons\";\nimport { LinkOff as LinkOffIcon } from \"@material-ui/icons\";\n\nimport authProviders from \"../../authProviders\";\n\nimport authentication from \"../../services/authentication\";\n\nclass LinksTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  linkAuthProvider = authProvider => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .linkAuthProvider(authProvider.providerId)\n          .then(value => {\n            this.props.openSnackbar(`${authProvider.name} linked`, 5);\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  unlinkAuthProvider = authProvider => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .unlinkAuthProvider(authProvider.providerId)\n          .then(value => {\n            this.props.openSnackbar(`${authProvider.name} unlinked`, 4);\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    const { performingAction } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          {authProviders.map(authProvider => {\n            const authProviderData = authentication.authProviderData(\n              authProvider.providerId\n            );\n            let identifier = null;\n\n            if (authProviderData) {\n              const displayName = authProviderData.displayName;\n              const emailAddress = authProviderData.email;\n              const phoneNumber = authProviderData.phoneNumber;\n\n              identifier = displayName || emailAddress || phoneNumber;\n            }\n\n            return (\n              <ListItem key={authProvider.providerId}>\n                <ListItemIcon>\n                  <Box color={theme.dark ? null : authProvider.color}>\n                    {authProvider.icon}\n                  </Box>\n                </ListItemIcon>\n\n                {authProviderData && (\n                  <ListItemText\n                    primary={authProvider.name}\n                    secondary={identifier}\n                  />\n                )}\n\n                {!authProviderData && (\n                  <ListItemText primary={authProvider.name} />\n                )}\n\n                <ListItemSecondaryAction>\n                  {authProviderData && (\n                    <Tooltip title=\"Unlink\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.unlinkAuthProvider(authProvider)}\n                        >\n                          <LinkOffIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!authProviderData && (\n                    <Tooltip title=\"Link\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.linkAuthProvider(authProvider)}\n                        >\n                          <LinkIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </DialogContent>\n    );\n  }\n}\n\nLinksTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default LinksTab;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\nimport moment from \"moment\";\n\nimport {\n  DialogContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  Hidden,\n  TextField,\n  Tooltip,\n  IconButton\n} from \"@material-ui/core\";\n\nimport { Lock as LockIcon } from \"@material-ui/icons\";\nimport { Edit as EditIcon } from \"@material-ui/icons\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst initialState = {\n  showingField: \"\",\n  password: \"\",\n  passwordConfirmation: \"\",\n  performingAction: false,\n  errors: null\n};\n\nclass SecurityTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  showField = fieldId => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = callback => {\n    this.setState(\n      {\n        showingField: \"\",\n        password: \"\",\n        passwordConfirmation: \"\",\n        errors: null\n      },\n      () => {\n        if (callback && typeof callback === \"function\") {\n          callback();\n        }\n      }\n    );\n  };\n\n  changeField = fieldId => {\n    switch (fieldId) {\n      case \"password\":\n        const { password } = this.state;\n\n        const errors = validate(\n          {\n            password: password\n          },\n          {\n            password: constraints.password\n          }\n        );\n\n        if (errors) {\n          this.setState({\n            errors: errors\n          });\n\n          return;\n        }\n\n        this.setState(\n          {\n            errors: null\n          },\n          () => {\n            this.showField(\"password-confirmation\");\n          }\n        );\n        return;\n\n      case \"password-confirmation\":\n        this.changePassword();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  changePassword = () => {\n    const { password, passwordConfirmation } = this.state;\n\n    const errors = validate(\n      {\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      },\n      {\n        password: constraints.password,\n        passwordConfirmation: constraints.passwordConfirmation\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changePassword(password)\n              .then(() => {\n                this.hideFields(() => {\n                  this.props.openSnackbar(\"Changed password\");\n                });\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.hideFields();\n    } else if (key === \"Enter\") {\n      this.changeField(fieldId);\n    }\n  };\n\n  handlePasswordChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Properties\n    const { userData } = this.props;\n\n    const {\n      showingField,\n      password,\n      passwordConfirmation,\n      performingAction,\n      errors\n    } = this.state;\n\n    const hasChangedPassword = userData && userData.lastPasswordChange;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <LockIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {showingField === \"password\" && (\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.password)}\n                fullWidth\n                helperText={\n                  errors && errors.password\n                    ? errors.password[0]\n                    : \"Press Enter to change your password\"\n                }\n                label=\"Password\"\n                required\n                type=\"password\"\n                value={password}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"password\")}\n                onChange={this.handlePasswordChange}\n              />\n            )}\n\n            {showingField === \"password-confirmation\" && (\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.passwordConfirmation)}\n                fullWidth\n                helperText={\n                  errors && errors.passwordConfirmation\n                    ? errors.passwordConfirmation[0]\n                    : \"Press Enter to change your password\"\n                }\n                label=\"Password confirmation\"\n                required\n                type=\"password\"\n                value={passwordConfirmation}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event =>\n                  this.handleKeyDown(event, \"password-confirmation\")\n                }\n                onChange={this.handlePasswordConfirmationChange}\n              />\n            )}\n\n            {showingField !== \"password\" &&\n              showingField !== \"password-confirmation\" && (\n                <>\n                  <Hidden xsDown>\n                    <ListItemText\n                      primary=\"Password\"\n                      secondary={\n                        hasChangedPassword\n                          ? `Last changed ${moment(\n                              userData.lastPasswordChange.toDate()\n                            ).format(\"LL\")}`\n                          : \"Never changed\"\n                      }\n                    />\n                  </Hidden>\n\n                  <Hidden smUp>\n                    <ListItemText\n                      primary=\"Password\"\n                      secondary={\n                        hasChangedPassword\n                          ? `Last changed ${moment(\n                              userData.lastPasswordChange.toDate()\n                            ).format(\"ll\")}`\n                          : \"Never changed\"\n                      }\n                    />\n                  </Hidden>\n\n                  <ListItemSecondaryAction>\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"password\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  </ListItemSecondaryAction>\n                </>\n              )}\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n}\n\nSecurityTab.propTypes = {\n  // Properties\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default SecurityTab;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  Typography,\n  Tooltip,\n  IconButton,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\n\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { AccountCircle as AccountCircleIcon } from \"@material-ui/icons\";\nimport { Palette as PaletteIcon } from \"@material-ui/icons\";\nimport { Link as LinkIcon } from \"@material-ui/icons\";\nimport { Security as SecurityIcon } from \"@material-ui/icons\";\n\nimport SwipeableViews from \"react-swipeable-views\";\n\nimport AccountTab from \"../AccountTab\";\nimport AppearanceTab from \"../AppearanceTab\";\nimport LinksTab from \"../LinksTab\";\nimport SecurityTab from \"../SecurityTab\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  tabs: {\n    display: \"initial\"\n  }\n});\n\nconst tabs = [\n  {\n    key: \"account\",\n    icon: <AccountCircleIcon />,\n    label: \"Account\"\n  },\n\n  {\n    key: \"appearance\",\n    icon: <PaletteIcon />,\n    label: \"Appearance\"\n  },\n\n  {\n    key: \"links\",\n    icon: <LinkIcon />,\n    label: \"Links\"\n  },\n\n  {\n    key: \"security\",\n    icon: <SecurityIcon />,\n    label: \"Security\"\n  }\n];\n\nconst initialState = {\n  selectedTab: 0\n};\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  handleIndexChange = index => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { user, userData, theme } = this.props;\n\n    // Custom Functions\n    const { openSnackbar } = this.props;\n\n    // Custom Functions\n    const { onDeleteAccountClick } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog {...dialogProps} onExited={this.handleExited}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">Settings</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Tabs\n          classes={{ root: classes.tabs }}\n          style={{ overflow: \"initial\", minHeight: \"initial\" }}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          value={selectedTab}\n          variant=\"fullWidth\"\n          onChange={this.handleTabChange}\n        >\n          {tabs.map(tab => {\n            return <Tab key={tab.key} icon={tab.icon} label={tab.label} />;\n          })}\n        </Tabs>\n\n        <SwipeableViews\n          index={selectedTab}\n          onChangeIndex={this.handleIndexChange}\n        >\n          <AccountTab\n            user={user}\n            userData={userData}\n            openSnackbar={openSnackbar}\n            onDeleteAccountClick={onDeleteAccountClick}\n          />\n\n          <AppearanceTab theme={theme} openSnackbar={openSnackbar} />\n\n          <LinksTab theme={theme} openSnackbar={openSnackbar} />\n\n          <SecurityTab\n            user={user}\n            userData={userData}\n            openSnackbar={openSnackbar}\n          />\n        </SwipeableViews>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  theme: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Custom Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Hidden,\n  Box,\n  TextField,\n  Button\n} from \"@material-ui/core\";\n\nconst initialState = {\n  username: \"\"\n};\n\nclass DeleteAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleKeyPress = event => {\n    const { userData } = this.props;\n\n    if (userData && userData.username) {\n      const { username } = this.state;\n\n      if (!username) {\n        return;\n      }\n\n      if (username !== userData.username) {\n        return;\n      }\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      this.props.deleteAccount();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleUsernameChange = event => {\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  render() {\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { performingAction, userData } = this.props;\n\n    // Custom Functions\n    const { deleteAccount } = this.props;\n\n    const { username } = this.state;\n\n    const hasUsername = userData && userData.username;\n\n    return (\n      <Dialog\n        {...dialogProps}\n        onKeyPress={this.handleKeyPress}\n        onExited={this.handleExited}\n      >\n        <DialogTitle>Delete account?</DialogTitle>\n\n        <DialogContent>\n          <Box mb={hasUsername ? 2 : 0}>\n            <DialogContentText>\n              Deleted accounts can’t be recovered. All data associated with your\n              account will be deleted.\n            </DialogContentText>\n\n            {hasUsername && (\n              <DialogContentText>\n                Type your username and <Hidden xsDown>click</Hidden>\n                <Hidden smUp>tap</Hidden> Delete to delete your account. This\n                action is irreversible.\n              </DialogContentText>\n            )}\n          </Box>\n\n          {hasUsername && (\n            <TextField\n              autoComplete=\"username\"\n              autoFocus\n              color=\"secondary\"\n              disabled={performingAction}\n              fullWidth\n              label=\"Username\"\n              placeholder={userData.username}\n              required\n              type=\"text\"\n              value={username}\n              variant=\"outlined\"\n              onChange={this.handleUsernameChange}\n            />\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"secondary\"\n            disabled={performingAction}\n            onClick={dialogProps.onClose}\n          >\n            Cancel\n          </Button>\n          <Button\n            color=\"secondary\"\n            disabled={\n              performingAction ||\n              (hasUsername && username !== userData.username)\n            }\n            variant=\"contained\"\n            onClick={deleteAccount}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  deleteAccount: PropTypes.func.isRequired\n};\n\nexport default DeleteAccountDialog;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions\n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n  noTitlePadding: {\n    paddingTop: theme.spacing(3)\n  }\n});\n\nclass AlertDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      dismissiveAction,\n      confirmingAction,\n      acknowledgementAction\n    } = this.props;\n\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\n      console.error(\n        \"Dialogs should contain a maximum of two actions. \" +\n          \"If a single action is provided, it must be an acknowledgement action. \" +\n          \"If two actions are provided, one must be a confirming action, and the other a dismissing action. \" +\n          \"Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. \" +\n          \"https://material.io/design/components/dialogs.html#actions\"\n      );\n\n      return null;\n    }\n\n    return (\n      <Dialog {...dialogProps}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        <DialogContent className={title ? null : classes.noTitlePadding}>\n          <DialogContentText>{contentText}</DialogContentText>\n        </DialogContent>\n\n        {(dismissiveAction || confirmingAction || acknowledgementAction) && (\n          <DialogActions>\n            {dismissiveAction}\n            {confirmingAction}\n            {acknowledgementAction}\n          </DialogActions>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nAlertDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  dismissiveAction: PropTypes.element,\n  confirmingAction: PropTypes.element,\n  acknowledgementAction: PropTypes.element\n};\n\nexport default withStyles(styles)(AlertDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { Hidden } from \"@material-ui/core\";\n\nimport AboutDialog from \"../AboutDialog\";\n\nimport SignUpDialog from \"../SignUpDialog\";\nimport SignInDialog from \"../SignInDialog\";\nimport SettingsDialog from \"../SettingsDialog\";\nimport DeleteAccountDialog from \"../DeleteAccountDialog\";\nimport AlertDialog from \"../AlertDialog\";\n\nclass DialogHost extends Component {\n  render() {\n    // Properties\n    const { performingAction, theme, user, userData, dialogs } = this.props;\n\n    // Functions\n    const { openSnackbar } = this.props;\n\n    const aboutDialog = dialogs.aboutDialog;\n    const signUpDialog = dialogs.signUpDialog;\n    const signInDialog = dialogs.signInDialog;\n    const settingsDialog = dialogs.settingsDialog;\n    const deleteAccountDialog = dialogs.deleteAccountDialog;\n    const signOutDialog = dialogs.signOutDialog;\n\n    return (\n      <>\n        <AboutDialog\n          dialogProps={aboutDialog.dialogProps}\n          performingAction={performingAction}\n          theme={theme}\n          user={user}\n          userData={userData}\n          openSnackbar={openSnackbar}\n          {...aboutDialog.props}\n        />\n\n        {user && (\n          <>\n            <AlertDialog\n              dialogProps={signOutDialog.dialogProps}\n              performingAction={performingAction}\n              theme={theme}\n              user={user}\n              userData={userData}\n              openSnackbar={openSnackbar}\n              {...signOutDialog.props}\n            />\n          </>\n        )}\n\n        <Hidden xsDown>\n          {user && (\n            <>\n              <DeleteAccountDialog\n                dialogProps={deleteAccountDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...deleteAccountDialog.props}\n              />\n            </>\n          )}\n\n          {!user && (\n            <>\n              <SignUpDialog\n                dialogProps={signUpDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={signInDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signInDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n\n        <Hidden smDown>\n          {user && (\n            <>\n              <SettingsDialog\n                dialogProps={settingsDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...settingsDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n\n        <Hidden smUp>\n          {user && (\n            <>\n              <DeleteAccountDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...deleteAccountDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...deleteAccountDialog.props}\n              />\n            </>\n          )}\n\n          {!user && (\n            <>\n              <SignUpDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signUpDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signInDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signInDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n\n        <Hidden mdUp>\n          {user && (\n            <>\n              <SettingsDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...settingsDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...settingsDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n      </>\n    );\n  }\n}\n\nDialogHost.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  theme: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n  dialogs: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default DialogHost;\n","import React, { Component } from \"react\";\n\nimport readingTime from \"reading-time\";\n\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport { CssBaseline, Button, Snackbar } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport { auth, firestore } from \"../../firebase\";\nimport authentication from \"../../services/authentication\";\nimport appearance from \"../../services/appearance\";\n\nimport ErrorBoundary from \"../ErrorBoundary\";\nimport LaunchScreen from \"../LaunchScreen\";\nimport Bar from \"../Bar\";\nimport Router from \"../Router\";\nimport DialogHost from \"../DialogHost\";\n\nconst initialState = {\n  ready: false,\n  performingAction: false,\n  theme: appearance.defaultTheme,\n  user: null,\n  userData: null,\n  roles: [],\n\n  aboutDialog: {\n    open: false\n  },\n\n  signUpDialog: {\n    open: false\n  },\n\n  signInDialog: {\n    open: false\n  },\n\n  settingsDialog: {\n    open: false\n  },\n\n  deleteAccountDialog: {\n    open: false\n  },\n\n  signOutDialog: {\n    open: false\n  },\n\n  snackbar: {\n    autoHideDuration: 0,\n    message: \"\",\n    open: false\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetState = callback => {\n    this.setState(\n      {\n        ready: true,\n        theme: appearance.defaultTheme,\n        user: null,\n        userData: null,\n        roles: []\n      },\n      callback\n    );\n  };\n\n  setTheme = (theme, callback) => {\n    if (!theme) {\n      this.setState(\n        {\n          theme: appearance.defaultTheme\n        },\n        callback\n      );\n\n      return;\n    }\n\n    this.setState(\n      {\n        theme: appearance.createTheme(theme)\n      },\n      callback\n    );\n  };\n\n  openDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = true;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = false;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeAllDialogs = callback => {\n    this.setState(\n      {\n        aboutDialog: {\n          open: false\n        },\n\n        signUpDialog: {\n          open: false\n        },\n\n        signInDialog: {\n          open: false\n        },\n\n        settingsDialog: {\n          open: false\n        },\n\n        deleteAccountDialog: {\n          open: false\n        },\n\n        signOutDialog: {\n          open: false\n        }\n      },\n      callback\n    );\n  };\n\n  deleteAccount = () => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .deleteAccount()\n          .then(() => {\n            this.closeAllDialogs(() => {\n              this.openSnackbar(\"Deleted account\");\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  signOut = () => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .signOut()\n          .then(() => {\n            this.closeAllDialogs(() => {\n              this.openSnackbar(\"Signed out\");\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  openSnackbar = (message, autoHideDuration = 2, callback) => {\n    this.setState(\n      {\n        snackbar: {\n          autoHideDuration: readingTime(message).time * autoHideDuration,\n          message,\n          open: true\n        }\n      },\n      () => {\n        if (callback && typeof callback === \"function\") {\n          callback();\n        }\n      }\n    );\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? \"\" : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      ready,\n      performingAction,\n      theme,\n      user,\n      userData,\n      roles\n    } = this.state;\n\n    const {\n      aboutDialog,\n      signUpDialog,\n      signInDialog,\n      settingsDialog,\n      deleteAccountDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <ErrorBoundary>\n          {!ready && <LaunchScreen />}\n\n          {ready && (\n            <>\n              <Router\n                user={user}\n                roles={roles}\n                bar={\n                  <Bar\n                    performingAction={performingAction}\n                    theme={theme}\n                    user={user}\n                    userData={userData}\n                    roles={roles}\n                    onSignUpClick={() => this.openDialog(\"signUpDialog\")}\n                    onSignInClick={() => this.openDialog(\"signInDialog\")}\n                    onAboutClick={() => this.openDialog(\"aboutDialog\")}\n                    onSettingsClick={() => this.openDialog(\"settingsDialog\")}\n                    onSignOutClick={() => this.openDialog(\"signOutDialog\")}\n                  />\n                }\n                openSnackbar={this.openSnackbar}\n              />\n\n              <DialogHost\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={this.openSnackbar}\n                dialogs={{\n                  aboutDialog: {\n                    dialogProps: {\n                      open: aboutDialog.open,\n\n                      onClose: () => this.closeDialog(\"aboutDialog\")\n                    }\n                  },\n\n                  signUpDialog: {\n                    dialogProps: {\n                      open: signUpDialog.open,\n\n                      onClose: callback => {\n                        this.closeDialog(\"signUpDialog\");\n\n                        if (callback && typeof callback === \"function\") {\n                          callback();\n                        }\n                      }\n                    }\n                  },\n\n                  signInDialog: {\n                    dialogProps: {\n                      open: signInDialog.open,\n\n                      onClose: callback => {\n                        this.closeDialog(\"signInDialog\");\n\n                        if (callback && typeof callback === \"function\") {\n                          callback();\n                        }\n                      }\n                    }\n                  },\n\n                  settingsDialog: {\n                    dialogProps: {\n                      open: settingsDialog.open,\n\n                      onClose: () => this.closeDialog(\"settingsDialog\")\n                    },\n\n                    props: {\n                      onDeleteAccountClick: () =>\n                        this.openDialog(\"deleteAccountDialog\")\n                    }\n                  },\n\n                  deleteAccountDialog: {\n                    dialogProps: {\n                      open: deleteAccountDialog.open,\n\n                      onClose: () => this.closeDialog(\"deleteAccountDialog\")\n                    },\n\n                    props: {\n                      deleteAccount: this.deleteAccount\n                    }\n                  },\n\n                  signOutDialog: {\n                    dialogProps: {\n                      open: signOutDialog.open,\n\n                      onClose: () => this.closeDialog(\"signOutDialog\")\n                    },\n\n                    props: {\n                      title: \"Sign out?\",\n                      contentText:\n                        \"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\",\n                      dismissiveAction: (\n                        <Button\n                          color='primary'\n                          onClick={() => this.closeDialog(\"signOutDialog\")}\n                        >\n                          Cancel\n                        </Button>\n                      ),\n                      confirmingAction: (\n                        <Button\n                          color='primary'\n                          disabled={performingAction}\n                          variant='contained'\n                          onClick={this.signOut}\n                        >\n                          Sign Out\n                        </Button>\n                      )\n                    }\n                  }\n                }}\n              />\n\n              <Snackbar\n                autoHideDuration={snackbar.autoHideDuration}\n                message={snackbar.message}\n                open={snackbar.open}\n                onClose={this.closeSnackbar}\n              />\n            </>\n          )}\n        </ErrorBoundary>\n      </MuiThemeProvider>\n    );\n  }\n\n  componentDidMount() {\n    this.onAuthStateChangedObserver = auth.onAuthStateChanged(\n      user => {\n        // The user is not signed in or doesn’t have a user ID.\n        if (!user || !user.uid) {\n          if (this.userDocumentSnapshotListener) {\n            this.userDocumentSnapshotListener();\n          }\n\n          this.resetState();\n\n          return;\n        }\n\n        // The user is signed in, begin retrieval of external user data.\n        this.userDocumentSnapshotListener = firestore\n          .collection(\"users\")\n          .doc(user.uid)\n          .onSnapshot(\n            snapshot => {\n              const data = snapshot.data();\n\n              // The user doesn’t have a data point, equivalent to not signed in.\n              if (!snapshot.exists || !data) {\n                if (this.userDocumentSnapshotListener) {\n                  this.userDocumentSnapshotListener();\n                }\n\n                this.resetState();\n\n                return;\n              }\n\n              authentication\n                .getRoles()\n                .then(value => {\n                  this.setTheme(data.theme, () => {\n                    this.setState({\n                      ready: true,\n                      user: user,\n                      userData: data,\n                      roles: value || []\n                    });\n                  });\n                })\n                .catch(reason => {\n                  this.resetState(() => {\n                    const code = reason.code;\n                    const message = reason.message;\n\n                    switch (code) {\n                      default:\n                        this.openSnackbar(message);\n                        return;\n                    }\n                  });\n                });\n            },\n            error => {\n              this.resetState(() => {\n                const code = error.code;\n                const message = error.message;\n\n                switch (code) {\n                  default:\n                    this.openSnackbar(message);\n                    return;\n                }\n              });\n            }\n          );\n      },\n      error => {\n        this.resetState(() => {\n          const code = error.code;\n          const message = error.message;\n\n          switch (code) {\n            default:\n              this.openSnackbar(message);\n              return;\n          }\n        });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    if (this.onAuthStateChangedObserver) {\n      this.onAuthStateChangedObserver();\n    }\n\n    if (this.userDocumentSnapshotListener) {\n      this.userDocumentSnapshotListener();\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"typeface-roboto\";\nimport \"./index.css\";\nimport * as Sentry from \"@sentry/browser\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  release: `${process.env.REACT_APP_NAME}@${process.env.REACT_APP_VERSION}`\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}